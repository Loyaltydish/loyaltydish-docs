{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to LoyaltyDish API Docs Explore LoyaltyDish\u2019s API documentation.","title":"Welcome to LoyaltyDish API Docs"},{"location":"#welcome-to-loyaltydish-api-docs","text":"Explore LoyaltyDish\u2019s API documentation.","title":"Welcome to LoyaltyDish API Docs"},{"location":"analytics/","text":"All analytics queries accepts a timeUnit input proprty which accepts minute , hour , day , week , month as values and a timeFrame property with start and end of type DateTime . Offers redemptions { myOffersRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeOffersRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Single offer redemptions { offerRedemptions ( timeUnit: \"day\" filters: { offerId: 1 timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Offers impressions { myOffersImpressions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeOffersImpressions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Loyalty rewards redemptions { myLoyaltyRewardsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyRewardsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Loyalty stamps redemptions { myLoyaltyStampsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyStampsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Loyalty points redemptions { myLoyaltyPointsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyPointsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Loyalty points earned { merchantLoyaltyPointsEarned ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyPointsEarned ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } } Loyalty points issued { myLoyaltyPointsIssued ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyPointsIssued ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } } Loyalty stamps issued { myLoyaltyStampsIssued ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyStampsIssued ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } } Total customers joined { totalConsumers ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } } Store earnings { myEarnings ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeEarnings ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } } Store refunds { myRefunds ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeRefunds ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } } General report { storeGeneralReport ( filters: { storeId: 47 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { totalConsumers offersRedemptions pointsRedemptions pointsEarned stampsRedemptions stampsEarned } myGeneralReport ( filters: { country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { totalConsumers offersRedemptions pointsRedemptions pointsEarned stampsRedemptions stampsEarned } }","title":"Analytics"},{"location":"analytics/#offers-redemptions","text":"{ myOffersRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeOffersRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Offers redemptions"},{"location":"analytics/#single-offer-redemptions","text":"{ offerRedemptions ( timeUnit: \"day\" filters: { offerId: 1 timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Single offer redemptions"},{"location":"analytics/#offers-impressions","text":"{ myOffersImpressions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeOffersImpressions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Offers impressions"},{"location":"analytics/#loyalty-rewards-redemptions","text":"{ myLoyaltyRewardsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyRewardsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Loyalty rewards redemptions"},{"location":"analytics/#loyalty-stamps-redemptions","text":"{ myLoyaltyStampsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyStampsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Loyalty stamps redemptions"},{"location":"analytics/#loyalty-points-redemptions","text":"{ myLoyaltyPointsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } storeLoyaltyPointsRedemptions ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Loyalty points redemptions"},{"location":"analytics/#loyalty-points-earned","text":"{ merchantLoyaltyPointsEarned ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyPointsEarned ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } }","title":"Loyalty points earned"},{"location":"analytics/#loyalty-points-issued","text":"{ myLoyaltyPointsIssued ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyPointsIssued ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } }","title":"Loyalty points issued"},{"location":"analytics/#loyalty-stamps-issued","text":"{ myLoyaltyStampsIssued ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeLoyaltyStampsIssued ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } }","title":"Loyalty stamps issued"},{"location":"analytics/#total-customers-joined","text":"{ totalConsumers ( timeUnit: \"day\" filters: { timeFrame: {} country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { timestamp total } }","title":"Total customers joined"},{"location":"analytics/#store-earnings","text":"{ myEarnings ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeEarnings ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } }","title":"Store earnings"},{"location":"analytics/#store-refunds","text":"{ myRefunds ( timeUnit: \"day\" filters: { timeFrame: {} } ) { timestamp total } storeRefunds ( timeUnit: \"day\" filters: { timeFrame: {} storeId: 19 } ) { timestamp total } }","title":"Store refunds"},{"location":"analytics/#general-report","text":"{ storeGeneralReport ( filters: { storeId: 47 country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { totalConsumers offersRedemptions pointsRedemptions pointsEarned stampsRedemptions stampsEarned } myGeneralReport ( filters: { country: \"\" city: \"\" gender: \"\" zipCode: \"\" } ) { totalConsumers offersRedemptions pointsRedemptions pointsEarned stampsRedemptions stampsEarned } }","title":"General report"},{"location":"api_overview/","text":"LoyaltyDish offers a suite of APIs that allow merchant to retreive, create and update customers, product, loyalty points and discount coupon with ease, interoperate with other systems and platforms to enhance their customer experience, understand user engagement patterns, and campaign performance. Requirements for accessing LoyaltyDish API Requests should be authorized Users should be authenticated Rate limits should be respected","title":"API overview"},{"location":"api_overview/#requirements-for-accessing-loyaltydish-api","text":"Requests should be authorized Users should be authenticated Rate limits should be respected","title":"Requirements for accessing LoyaltyDish API"},{"location":"authentication/","text":"LoyaltyDish offers a simple interface for handling authentication. Its based on the JWT convention where each request should contain the Authorization: Bearer <access_token> header. Obtain access token Once you have created an account with an email and password, the signIn mutation will be available to obtain your access token. Access token : A token that grants access to a client's resources and has some privileges attached to it. Access tokens expire after a certain amount of time. Refresh token: A token that is used to generate more access tokens. If you use the code flow, refresh tokens are valid until their access is revoked. Refresh tokens are single-use tokens and expire after 90 days. Request Variables Response mutation MerchantSignIn ( $email : String ! $password : String ! ){ signIn ( email: $email password: $password ) { token refreshToken success errors } } { \"email\" : \"demo@loyaltydish.com\" , \"password\" : \"12345@abc\" } { \"data\" : { \"signIn\" : { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\" , \"refreshToken\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" , \"success\" : true , \"errors\" : null } } } Refresh token Exchange access token by passing refresh token Request Variables Response mutation ( $token : String !){ refreshToken ( refreshToken: $token ) { success , errors , payload , token , refreshToken } } { \"token\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" } { \"data\" : { \"refreshToken\" : { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\" , \"refreshToken\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" , \"success\" : true , \"errors\" : null } } } Revoke token API to revoke the refresh token of an user Request Variables Response mutation ( $token : String !){ revokeToken ( refreshToken: $token ) { success , errors , payload , token , refreshToken } } { \"token\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" } { \"data\" : { \"revokeToken\" : { \"success\" : true , \"errors\" : null } } }","title":"Authentication"},{"location":"authentication/#obtain-access-token","text":"Once you have created an account with an email and password, the signIn mutation will be available to obtain your access token. Access token : A token that grants access to a client's resources and has some privileges attached to it. Access tokens expire after a certain amount of time. Refresh token: A token that is used to generate more access tokens. If you use the code flow, refresh tokens are valid until their access is revoked. Refresh tokens are single-use tokens and expire after 90 days. Request Variables Response mutation MerchantSignIn ( $email : String ! $password : String ! ){ signIn ( email: $email password: $password ) { token refreshToken success errors } } { \"email\" : \"demo@loyaltydish.com\" , \"password\" : \"12345@abc\" } { \"data\" : { \"signIn\" : { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\" , \"refreshToken\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" , \"success\" : true , \"errors\" : null } } }","title":"Obtain access token"},{"location":"authentication/#refresh-token","text":"Exchange access token by passing refresh token Request Variables Response mutation ( $token : String !){ refreshToken ( refreshToken: $token ) { success , errors , payload , token , refreshToken } } { \"token\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" } { \"data\" : { \"refreshToken\" : { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\" , \"refreshToken\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" , \"success\" : true , \"errors\" : null } } }","title":"Refresh token"},{"location":"authentication/#revoke-token","text":"API to revoke the refresh token of an user Request Variables Response mutation ( $token : String !){ revokeToken ( refreshToken: $token ) { success , errors , payload , token , refreshToken } } { \"token\" : \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\" } { \"data\" : { \"revokeToken\" : { \"success\" : true , \"errors\" : null } } }","title":"Revoke token"},{"location":"authorization/","text":"Authorization is the process of giving permissions to apps. Merchants can authorize different apps to access data in a store or multiple stores. For example, an app might be authorized to access orders and product data in a store. Create an application dashboard screenshots Generate API keys dashbaord screenshots Authorizing requests Each request to LoyaltyDish API endpoint https://api.loyaltydish.com/graphql should contain the following headers: X-API-Key : The generated API key i.e. bShKekKe.riqwSJUbDym6sttbHppaVMdNzxGN5oB7 . X-App-Id : The corresponding application id i.e. 8e4033f7-8be0-4ff8-8305-b3fe7eb8ffcc .","title":"Obtain API keys"},{"location":"authorization/#create-an-application","text":"dashboard screenshots","title":"Create an application"},{"location":"authorization/#generate-api-keys","text":"dashbaord screenshots","title":"Generate API keys"},{"location":"authorization/#authorizing-requests","text":"Each request to LoyaltyDish API endpoint https://api.loyaltydish.com/graphql should contain the following headers: X-API-Key : The generated API key i.e. bShKekKe.riqwSJUbDym6sttbHppaVMdNzxGN5oB7 . X-App-Id : The corresponding application id i.e. 8e4033f7-8be0-4ff8-8305-b3fe7eb8ffcc .","title":"Authorizing requests"},{"location":"campaigns/","text":"The campaign node Method Type Description pk Int id ID! merchant UserNode stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! name String! start DateTime! end DateTime! status CampaignStatus! images CampaignImageNodeConnection! offers OfferNodeConnection! loyaltyCards LoyaltyCardNodeConnection! activities ActivityNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a campaign Request Variables Response mutation ( $name : String ! $start : Date ! $end : Date ! $status : String $stores : [ ID ] $storeGroups : [ ID ] $images : [ ImageInput ]! ){ createCampaign ( input: { name: $name start: $start end: $end status: $status stores: $stores storeGroups: $storeGroups images: $images } ) { success errors campaign { pk id } } } { \"name\" : \"Summer campaign\" , \"start\" : \"2022-07-21\" , \"end\" : \"2022-07-30\" , \"status\" : \"SCHEDULED\" , \"stores\" : [ 4 , 5 , 6 ] } { \"data\" : { \"createCampaign\" : { \"success\" : true , \"errors\" : null , \"campaign\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update a campaign Request Variables Response mutation ( $id : ID ! $name : String $start : Date $end : Date $status : String $stores : [ ID ] $storeGroups : [ ID ] $images : [ ImageInput ] ){ updateCampaign ( input: { id: $id name: $name start: $start end: $end status: $status stores: $stores storeGroups: $storeGroups images: $images } ) { success errors campaign { pk id } } } { \"name\" : \"Editd - Summer campaign\" } { \"data\" : { \"updateCampaign\" : { \"success\" : true , \"errors\" : null , \"campaign\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete a campaign Request Variables Response mutation ( $id : ID ! ){ deleteCampaign ( input: { id: $id } ) { success errors } } { \"id\" : 5 } { \"data\" : { \"deleteCampaign\" : { \"success\" : true , \"errors\" : null } } } List Campaigns query { campaigns { edges { node { pk id } } } } Get a single campaign query { campaign ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Campaigns"},{"location":"campaigns/#the-campaign-node","text":"Method Type Description pk Int id ID! merchant UserNode stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! name String! start DateTime! end DateTime! status CampaignStatus! images CampaignImageNodeConnection! offers OfferNodeConnection! loyaltyCards LoyaltyCardNodeConnection! activities ActivityNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The campaign node"},{"location":"campaigns/#create-a-campaign","text":"Request Variables Response mutation ( $name : String ! $start : Date ! $end : Date ! $status : String $stores : [ ID ] $storeGroups : [ ID ] $images : [ ImageInput ]! ){ createCampaign ( input: { name: $name start: $start end: $end status: $status stores: $stores storeGroups: $storeGroups images: $images } ) { success errors campaign { pk id } } } { \"name\" : \"Summer campaign\" , \"start\" : \"2022-07-21\" , \"end\" : \"2022-07-30\" , \"status\" : \"SCHEDULED\" , \"stores\" : [ 4 , 5 , 6 ] } { \"data\" : { \"createCampaign\" : { \"success\" : true , \"errors\" : null , \"campaign\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a campaign"},{"location":"campaigns/#update-a-campaign","text":"Request Variables Response mutation ( $id : ID ! $name : String $start : Date $end : Date $status : String $stores : [ ID ] $storeGroups : [ ID ] $images : [ ImageInput ] ){ updateCampaign ( input: { id: $id name: $name start: $start end: $end status: $status stores: $stores storeGroups: $storeGroups images: $images } ) { success errors campaign { pk id } } } { \"name\" : \"Editd - Summer campaign\" } { \"data\" : { \"updateCampaign\" : { \"success\" : true , \"errors\" : null , \"campaign\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update a campaign"},{"location":"campaigns/#delete-a-campaign","text":"Request Variables Response mutation ( $id : ID ! ){ deleteCampaign ( input: { id: $id } ) { success errors } } { \"id\" : 5 } { \"data\" : { \"deleteCampaign\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a campaign"},{"location":"campaigns/#list-campaigns","text":"query { campaigns { edges { node { pk id } } } }","title":"List Campaigns"},{"location":"campaigns/#get-a-single-campaign","text":"query { campaign ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Get a single campaign"},{"location":"create_an_account/","text":"Request Variables Response mutation SignUp ( $email : String ! $password : String ! $firstname : String ! $lastname : String ! $userType : String ! $merchantType : String $phoneNumber : String $birthday : String $country : String $city : String $street : String $zipCode : String $gender : String ) { register ( email: $email password1: $password password2: $password firstname: $firstname lastname: $lastname userType: $userType merchantType: $merchantType phoneNumber: $phoneNumber birthday: $birthday country: $country city: $city street: $street zipCode: $zipCode gender: $gender ) { success errors token refreshToken } } { \"email\" : \"merch17@gmail.com\" , \"password\" : \"12345@abc\" , \"firstname\" : \"Test\" , \"lastname\" : \"merchant\" , \"userType\" : \"MERCHANT\" } { \"data\" : { \"register\" : { \"success\" : true , \"errors\" : null , \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoMThAZ21haWwuY29tIiwiZXhwIjoxNjk1Mzc5MDg0LCJvcmlnSWF0IjoxNjU5MzgyNjg0fQ.M6zrDOQ3Gn5LxrkLl1T3xUMz2xOrnL8CxHWOfAaOOSc\" , \"refreshToken\" : \"f5ee1e870f8fc78dbe9f12ae700460e9f4df9d55\" } } }","title":"Create an account"},{"location":"customer_affinities/","text":"input AffinitiesFiltersInput { by: String = \"purchase\" # purchase or impressions consumerId: ID ! storeId: ID limit: Int = 5 startTime: Time endTime: Time } query ( $filters : AffinitiesFiltersInput !) { affinityProducts ( filters: $filters ) { percentage product { id name } } affinityCategories ( filters: $filters ) { percentage category { id name } } affinityOrderType ( filters: $filters ) { percentage orderType { id name } } affinityComponents ( filters: $filters ) { percentage component { id name } } }","title":"Customer affinities"},{"location":"customers/","text":"Create, manage and sync customers from internal and external sources (like Spotify, salesforce, etc.) The customer APIs also enable to fetch all customer-related resources like orders, promotions, loyalty points, and more Customer Signup Create a new customer Request gql mutation SignUp( $email: String! $password: String! $firstname: String! $lastname: String! $userType: String! $merchantType: String $phoneNumber: String $birthday: String $country: String $city: String $street: String $zipCode: String $gender: String ) { register( email: $email password1: $password password2: $password firstname: $firstname lastname: $lastname userType: $userType merchantType: $merchantType phoneNumber: $phoneNumber birthday: $birthday country: $country city: $city street: $street zipCode: $zipCode gender: $gender ) { success errors token refreshToken } } Variables json { \"email\": \"consumer@loyaltydish.com\", \"password\": \"XXXXXX\", \"firstname\": \"John\", \"lastname\": \"Doe\", \"userType\": \"CONSUMER\" } Response json { \"data\": { \"register\": { \"success\": true, \"errors\": null, \"token\": \"eyJ0eXAjOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoMThAZ21haWwuY29tIiwiZXhwIjoxNjk1Mzc5MDg0LCJvcmlnSWF0IjoxNjU5MzgyNjg0fQ.M6zrDOQ3Gn5LxrkLl1T3xUMz2xOrnL8CxHWOfAaOOSc\", \"refreshToken\": \"f5ee1e870f8fc78dbe9f12ae700460e9f4df9d55\" } } } Customer Login Mutation to login the customer to access the system. Access token will be generated to access other resources Request gql mutation ( $email: String! $password: String! ){ obtainToken( email: $email password: $password ) { token refreshToken success errors } } Variables json { \"email\": \"consumer@loyaltydish.com\", \"password\": \"XXXXXX\" } Response json { \"data\": { \"signIn\": { \"token\": \"eyJ0eXSiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\", \"refreshToken\": \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\", \"success\": true, \"errors\": null } } } List customers List all the customers in the system query { consumers ( loyaltyId: \"\", phoneNumber_Icontains: \"\", email_Icontains: \"\" ) { edges { node { pk id firstname lastname email pointsEarned phoneNumber birthday address lastLogin loyaltyId picture city } } } } Get a single customer Returns the customer resource by ID query { consumer ( id: \"SVVzZXJOb2RlOjE3Nw==\" ) { pointsEarned redemptions { edges { node { id createdAt } } } stampsRedemptions { edges { node { id createdAt } } } pointsRedemptions { edges { node { id createdAt } } } } } Get customer available promotions Returns all the promotions target to the customer query ( $consumerLoyaltyId : String $consumerEmail : String $consumerPhoneNumber : String $storeId : ID ) { consumerAvailablePromotions ( consumerLoyaltyId: $consumerLoyaltyId consumerEmail: $consumerEmail consumerPhoneNumber: $consumerPhoneNumber storeId: $storeId ) { count edges { node { name } } } } Get customer's purchase history Return all the orders placed by the customer ID filter by duration query ( $id : ID ! $storeId : ID ) { purchaseHistory: orders ( consumer_Id: $id store_Id: $storeId ) { edges { node { orderId completedAt paymentTypeDisplay total orderType { name } } } } } ` Customers object Provides the fields and values to use when creating or updating a customer. Method Type Description id ID! Unique ID of the customer lastLogin DateTime The last time the customer login time to the system extraInfo JSONString Create custom fields in key/value pair deletedAt DateTime Datetime when customer is inactivated userType UserUserType! Default to \"CONSUMER\" email String Unique email ID for the customer firstname String! The customer's first name. lastname String! The customer's last name. phoneNumber String The customer's primary phone #. The phone number should comply with the E.164 international telephone numbering plan. birthday Date The customer's birth date gender UserGender Gender of the customer country UserCountry The customer's country city String The customer's city street String The customer's street address zipCode String The customer's zip code picture String Profile picture of the customer merchantType UserMerchantType Default to Null creator IUserNode Default to Null logo String Default to Null numOfOrderDiscountsAllowed Int! Default to Null loyaltyId String The customer's unique Loyalty ID entitySource UserEntitySource Source from which the customer's is created entitySourceId String Unique Entity ID of the customer created from the source active Boolean! False if the customer's is deleted staff Boolean! Default to Null admin Boolean! Default to Null createdAt DateTime! The time the customer's was created updatedAt DateTime! The time the customer's was last updated archived Boolean false if customer is no-longer active verified Boolean Confirms whether the customer's email ID is verified secondaryEmail String Secondary email of the customer address String Complete address of the customer pointsEarned Int Loyalty Points earned by the customer by merchant","title":"Customers"},{"location":"customers/#customer-signup","text":"Create a new customer Request gql mutation SignUp( $email: String! $password: String! $firstname: String! $lastname: String! $userType: String! $merchantType: String $phoneNumber: String $birthday: String $country: String $city: String $street: String $zipCode: String $gender: String ) { register( email: $email password1: $password password2: $password firstname: $firstname lastname: $lastname userType: $userType merchantType: $merchantType phoneNumber: $phoneNumber birthday: $birthday country: $country city: $city street: $street zipCode: $zipCode gender: $gender ) { success errors token refreshToken } } Variables json { \"email\": \"consumer@loyaltydish.com\", \"password\": \"XXXXXX\", \"firstname\": \"John\", \"lastname\": \"Doe\", \"userType\": \"CONSUMER\" } Response json { \"data\": { \"register\": { \"success\": true, \"errors\": null, \"token\": \"eyJ0eXAjOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoMThAZ21haWwuY29tIiwiZXhwIjoxNjk1Mzc5MDg0LCJvcmlnSWF0IjoxNjU5MzgyNjg0fQ.M6zrDOQ3Gn5LxrkLl1T3xUMz2xOrnL8CxHWOfAaOOSc\", \"refreshToken\": \"f5ee1e870f8fc78dbe9f12ae700460e9f4df9d55\" } } }","title":"Customer Signup"},{"location":"customers/#customer-login","text":"Mutation to login the customer to access the system. Access token will be generated to access other resources Request gql mutation ( $email: String! $password: String! ){ obtainToken( email: $email password: $password ) { token refreshToken success errors } } Variables json { \"email\": \"consumer@loyaltydish.com\", \"password\": \"XXXXXX\" } Response json { \"data\": { \"signIn\": { \"token\": \"eyJ0eXSiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6Im1lcmNoYW50M0BnbWFpbC5jb20iLCJleHAiOjE2OTUzNjQ4NzQsIm9yaWdJYXQiOjE2NTkzNjg0NzR9.9jYPs1ThFW_kiC2SeIacjOM-sQuMbdbYtyGor5X78Ug\", \"refreshToken\": \"4ce1ac944d9658c1e72999efbf497dc2a05138ac\", \"success\": true, \"errors\": null } } }","title":"Customer Login"},{"location":"customers/#list-customers","text":"List all the customers in the system query { consumers ( loyaltyId: \"\", phoneNumber_Icontains: \"\", email_Icontains: \"\" ) { edges { node { pk id firstname lastname email pointsEarned phoneNumber birthday address lastLogin loyaltyId picture city } } } }","title":"List customers"},{"location":"customers/#get-a-single-customer","text":"Returns the customer resource by ID query { consumer ( id: \"SVVzZXJOb2RlOjE3Nw==\" ) { pointsEarned redemptions { edges { node { id createdAt } } } stampsRedemptions { edges { node { id createdAt } } } pointsRedemptions { edges { node { id createdAt } } } } }","title":"Get a single customer"},{"location":"customers/#get-customer-available-promotions","text":"Returns all the promotions target to the customer query ( $consumerLoyaltyId : String $consumerEmail : String $consumerPhoneNumber : String $storeId : ID ) { consumerAvailablePromotions ( consumerLoyaltyId: $consumerLoyaltyId consumerEmail: $consumerEmail consumerPhoneNumber: $consumerPhoneNumber storeId: $storeId ) { count edges { node { name } } } }","title":"Get customer available promotions"},{"location":"customers/#get-customers-purchase-history","text":"Return all the orders placed by the customer ID filter by duration query ( $id : ID ! $storeId : ID ) { purchaseHistory: orders ( consumer_Id: $id store_Id: $storeId ) { edges { node { orderId completedAt paymentTypeDisplay total orderType { name } } } } } `","title":"Get customer's purchase history"},{"location":"customers/#customers-object","text":"Provides the fields and values to use when creating or updating a customer. Method Type Description id ID! Unique ID of the customer lastLogin DateTime The last time the customer login time to the system extraInfo JSONString Create custom fields in key/value pair deletedAt DateTime Datetime when customer is inactivated userType UserUserType! Default to \"CONSUMER\" email String Unique email ID for the customer firstname String! The customer's first name. lastname String! The customer's last name. phoneNumber String The customer's primary phone #. The phone number should comply with the E.164 international telephone numbering plan. birthday Date The customer's birth date gender UserGender Gender of the customer country UserCountry The customer's country city String The customer's city street String The customer's street address zipCode String The customer's zip code picture String Profile picture of the customer merchantType UserMerchantType Default to Null creator IUserNode Default to Null logo String Default to Null numOfOrderDiscountsAllowed Int! Default to Null loyaltyId String The customer's unique Loyalty ID entitySource UserEntitySource Source from which the customer's is created entitySourceId String Unique Entity ID of the customer created from the source active Boolean! False if the customer's is deleted staff Boolean! Default to Null admin Boolean! Default to Null createdAt DateTime! The time the customer's was created updatedAt DateTime! The time the customer's was last updated archived Boolean false if customer is no-longer active verified Boolean Confirms whether the customer's email ID is verified secondaryEmail String Secondary email of the customer address String Complete address of the customer pointsEarned Int Loyalty Points earned by the customer by merchant","title":"Customers object"},{"location":"email_templing/","text":"LoyaltyDish provides an API to create email templates based on the Jinja templating language Create an email template Request Variables Response mutation ( $name : String ! $description : String $template : JSONString $prebuiltTemplateId : ID ) { createEmailTemplate ( input: { name: $name description: $description template: $template prebuiltTemplateId: $prebuiltTemplateId }) { success errors emailTemplate { pk name description template merchant { pk } } } } { \"name\" : \"Email template 1\" , \"description\" : \"The first email template\" , \"template\" : \"{\\\"design\\\": {}}\" } { \"data\" : { \"createEmailTemplate\" : { \"success\" : true , \"errors\" : null , \"emailTemplate\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update an email template Request Variables Response mutation ( $id : ID ! $name : String $description : String $template : JSONString ) { updateEmailTemplate ( input: { id: $id name: $name description: $description template: $template }) { success errors emailTemplate { pk name description template } } } { \"id\" : 1 , \"name\" : \"Email template 1 - edited\" } { \"data\" : { \"updateEmailTemplate\" : { \"success\" : true , \"errors\" : null , \"emailTemplate\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete an email template Request Variables Response mutation ( $id : ID ! ) { deleteEmailTemplate ( input: { id: $id }) { success errors } } { \"id\" : 1 } { \"data\" : { \"deleteEmailTemplate\" : { \"success\" : true , \"errors\" : null } } } List email templates query { emailTemplates { edges { node { pk id } } } } Get a single email template query { emailTemplate ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } } Create an prebuilt email template mutation ( $name : String ! $description : String $template : JSONString $activeFrom : DateTime ! $activeTo : DateTime ! $categoryId : ID ! ) { createPrebuiltEmailTemplate ( input: { name: $name description: $description template: $template activeFrom: $activeFrom activeTo: $activeTo categoryId: $categoryId }) { success errors prebuiltEmailTemplate { pk name description template activeFrom activeTo } } } Update a prebuilt email template mutation ( $id : ID ! $name : String $description : String $template : JSONString $activeFrom : DateTime $activeTo : DateTime $categoryId : ID ) { updatePrebuiltEmailTemplate ( input: { id: $id name: $name description: $description template: $template activeFrom: $activeFrom activeTo: $activeTo categoryId: $categoryId }) { success errors prebuiltEmailTemplate { pk name description template activeFrom activeTo } } } Delete a prebuilt email template mutation ( $id : ID ! ) { deletePrebuiltEmailTemplate ( input: { id: $id }) { success errors } } List prebuilt email templates query ( $categoryId : ID ){ prebuiltEmailTemplates ( categoryId: $categoryId ) { count edges { node { pk id } } } } Get a single prebuilt email template query ( $id : ID !) { prebuiltEmailTemplate ( id: $id ) { id pk name template activeFrom activeTo } } Create an prebuilt email template category mutation ( $name : String ! $displayName : String ! ) { createPrebuiltEmailTemplateCategory ( input: { name: $name displayName: $displayName }) { success errors category { pk name displayName } } } Update a prebuilt email template category mutation ( $id : ID ! $name : String $displayName : String ) { updatePrebuiltEmailTemplateCategory ( input: { id: $id name: $name displayName: $displayName }) { success errors category { pk name displayName } } } Delete a prebuilt email template mutation ( $id : ID ! ) { deletePrebuiltEmailTemplateCategory ( input: { id: $id }) { success errors } } List prebuilt email templates query { prebuiltEmailTemplateCategories { count edges { node { pk id name displayName } } } } Get a single prebuilt email template query ( $id : ID !) { prebuiltEmailTemplateCategory ( id: $id ) { id pk name displayName } }","title":"Email templating"},{"location":"email_templing/#create-an-email-template","text":"Request Variables Response mutation ( $name : String ! $description : String $template : JSONString $prebuiltTemplateId : ID ) { createEmailTemplate ( input: { name: $name description: $description template: $template prebuiltTemplateId: $prebuiltTemplateId }) { success errors emailTemplate { pk name description template merchant { pk } } } } { \"name\" : \"Email template 1\" , \"description\" : \"The first email template\" , \"template\" : \"{\\\"design\\\": {}}\" } { \"data\" : { \"createEmailTemplate\" : { \"success\" : true , \"errors\" : null , \"emailTemplate\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create an email template"},{"location":"email_templing/#update-an-email-template","text":"Request Variables Response mutation ( $id : ID ! $name : String $description : String $template : JSONString ) { updateEmailTemplate ( input: { id: $id name: $name description: $description template: $template }) { success errors emailTemplate { pk name description template } } } { \"id\" : 1 , \"name\" : \"Email template 1 - edited\" } { \"data\" : { \"updateEmailTemplate\" : { \"success\" : true , \"errors\" : null , \"emailTemplate\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update an email template"},{"location":"email_templing/#delete-an-email-template","text":"Request Variables Response mutation ( $id : ID ! ) { deleteEmailTemplate ( input: { id: $id }) { success errors } } { \"id\" : 1 } { \"data\" : { \"deleteEmailTemplate\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete an email template"},{"location":"email_templing/#list-email-templates","text":"query { emailTemplates { edges { node { pk id } } } }","title":"List email templates"},{"location":"email_templing/#get-a-single-email-template","text":"query { emailTemplate ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Get a single email template"},{"location":"email_templing/#create-an-prebuilt-email-template","text":"mutation ( $name : String ! $description : String $template : JSONString $activeFrom : DateTime ! $activeTo : DateTime ! $categoryId : ID ! ) { createPrebuiltEmailTemplate ( input: { name: $name description: $description template: $template activeFrom: $activeFrom activeTo: $activeTo categoryId: $categoryId }) { success errors prebuiltEmailTemplate { pk name description template activeFrom activeTo } } }","title":"Create an prebuilt email template"},{"location":"email_templing/#update-a-prebuilt-email-template","text":"mutation ( $id : ID ! $name : String $description : String $template : JSONString $activeFrom : DateTime $activeTo : DateTime $categoryId : ID ) { updatePrebuiltEmailTemplate ( input: { id: $id name: $name description: $description template: $template activeFrom: $activeFrom activeTo: $activeTo categoryId: $categoryId }) { success errors prebuiltEmailTemplate { pk name description template activeFrom activeTo } } }","title":"Update a prebuilt email template"},{"location":"email_templing/#delete-a-prebuilt-email-template","text":"mutation ( $id : ID ! ) { deletePrebuiltEmailTemplate ( input: { id: $id }) { success errors } }","title":"Delete a prebuilt email template"},{"location":"email_templing/#list-prebuilt-email-templates","text":"query ( $categoryId : ID ){ prebuiltEmailTemplates ( categoryId: $categoryId ) { count edges { node { pk id } } } }","title":"List prebuilt email templates"},{"location":"email_templing/#get-a-single-prebuilt-email-template","text":"query ( $id : ID !) { prebuiltEmailTemplate ( id: $id ) { id pk name template activeFrom activeTo } }","title":"Get a single prebuilt email template"},{"location":"email_templing/#create-an-prebuilt-email-template-category","text":"mutation ( $name : String ! $displayName : String ! ) { createPrebuiltEmailTemplateCategory ( input: { name: $name displayName: $displayName }) { success errors category { pk name displayName } } }","title":"Create an prebuilt email template category"},{"location":"email_templing/#update-a-prebuilt-email-template-category","text":"mutation ( $id : ID ! $name : String $displayName : String ) { updatePrebuiltEmailTemplateCategory ( input: { id: $id name: $name displayName: $displayName }) { success errors category { pk name displayName } } }","title":"Update a prebuilt email template category"},{"location":"email_templing/#delete-a-prebuilt-email-template_1","text":"mutation ( $id : ID ! ) { deletePrebuiltEmailTemplateCategory ( input: { id: $id }) { success errors } }","title":"Delete a prebuilt email template"},{"location":"email_templing/#list-prebuilt-email-templates_1","text":"query { prebuiltEmailTemplateCategories { count edges { node { pk id name displayName } } } }","title":"List prebuilt email templates"},{"location":"email_templing/#get-a-single-prebuilt-email-template_1","text":"query ( $id : ID !) { prebuiltEmailTemplateCategory ( id: $id ) { id pk name displayName } }","title":"Get a single prebuilt email template"},{"location":"get_started/","text":"Loyaltydish API's opens up a lot of new capabilities to build your custom apps and integration with your existing eco-system Our API Reference is organized around core business workflows: Customers Segmentation and workflow, customer 360, offers, loyalty, products, managing stores locations, managing orders, and building analytic dashboards These APIs are organized around GraphQL, and use your Private API Keys for authentication.This page will help you get up and running with GraphQL API.","title":"Get started"},{"location":"loyalties/","text":"Loyalty card object Method Type Description id ID! pk Int merchant UserNode stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! products ProductNodeConnection! campaign CampaignNode name String! shortDescription String longDescription String placement LoyaltyCardPlacement startTime DateTime! endTime DateTime! redemptionCodeType LoyaltyCardRedemptionCodeType! enrollmentLimit Int repeatable Boolean repeatDelayHours Int dayStartTime Time dayEndTime Time daysOfWeek [String] weather String termsAndConditions String minimumSpendCurrency LoyaltyCardMinimumSpendCurrency minimumSpend String minPriceCurrency LoyaltyCardMinPriceCurrency minPrice String maxPriceCurrency LoyaltyCardMaxPriceCurrency maxPrice String loyaltyType LoyaltyCardLoyaltyType! pointsLoyaltyType LoyaltyCardPointsLoyaltyType code String redemptionExpirationDays Int initialPoints Int validityInMonths Int stampsNeeded Int stampExpirationDays Int maxPointsPerDay Int maxStampsPerDay Int pointsNeeded Int incrementalPoints Int dollarWorth Int pointWorthCurrency LoyaltyCardPointWorthCurrency pointWorth String status LoyaltyCardStatus! pictures LoyaltyCardPictureNodeConnection! rewards LoyaltyRewardNodeConnection! stampsRedemptionIntents StampsRedemptionIntentNodeConnection! stampsRedemptions StampsRedemptionNodeConnection! pointsRedemptionIntents PointsRedemptionIntentNodeConnection! pointsRedemptions PointsRedemptionNodeConnection! stamps StampNodeConnection minimumSpendAmount Float minPriceAmount Float maxPriceAmount Float pointWorthAmount Float checkedStamps Int earnedPoints Int rewardAvailable Boolean visits VisitNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a points loyalty Reward flat amount Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Points loyalty\" , \"shortDescription\" : \"Points loyalty short description\" , \"longDescription\" : \"Points loyalty long description\" , \"loyaltyType\" : \"POINTS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"pointsLoyaltyType\" : \"FLAT\" , \"dollarWorth\" : 5 , \"maxPointsPerDay\" : 20 , \"initialPoints\" : 5 , \"pointWorth\" : \"1.00\" , \"pointsNeeded\" : 200 , \"incrementalPoints\" : 10 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Reward a product Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Points loyalty\" , \"shortDescription\" : \"Points loyalty short description\" , \"longDescription\" : \"Points loyalty long description\" , \"loyaltyType\" : \"POINTS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"pointsLoyaltyType\" : \"PRODUCT\" , \"rewards\" : [ 5 , 6 , 7 ], \"dollarWorth\" : 5 , \"maxPointsPerDay\" : 20 , \"initialPoints\" : 5 , \"pointWorth\" : \"1.00\" , \"pointsNeeded\" : 200 , \"incrementalPoints\" : 10 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create a stamps loyalty Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Stamps loyalty\" , \"shortDescription\" : \"Stamps loyalty short description\" , \"longDescription\" : \"Stamps loyalty long description\" , \"loyaltyType\" : \"STAMPS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"stampsNeeded\" : 5 , \"stampExpirationDays\" : 3 , \"maxStampsPerDay\" : 1 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update a loyalty card Request Variables Response mutation UpdateLoyalty ( id: ID ! stores: [ ID ] storeGroups: [ ID ] campaignId: ID weather: String name: String shortDescription: String longDescription: String placement: String startTime: DateTime endTime: DateTime redemptionCodeType: String enrollmentLimit: Int dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ] termsAndConditions: String loyaltyType: String code: String pictures: [ LoyaltyImageInput ] repeatable: Boolean repeatDelayHours: Int redemptionExpirationDays: Int minPrice: Decimal minPriceCurrency: String maxPrice: Decimal maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ updateLoyaltyCard ( input: { id: $id stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"id\" : 100 , \"name\" : \"Stamps loyalty - edited\" } { \"data\" : { \"updateLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete a loyalty card Request Variables Response mutation DeleteLoyalty ( id: ID ! ){ updateLoyaltyCard ( input: { id: $id } ) { success errors } } { \"id\" : 100 } { \"data\" : { \"deleteLoyaltyCard\" : { \"success\" : true , \"errors\" : null } } } Create a loyalty reward Request Variables Response mutation CreateLoyaltyReward ( $loyaltyCardId : ID ! $productId : ID ! $points : Int ! $expiry : Date ! ){ createLoyaltyReward ( input: { loyaltyCardId: $loyaltyCardId productId: $productId points: $points expiry: $expiry } ) { success errors loyaltyReward { id } } } { \"loyaltyCardId\" : 100 , \"productId\" : 5 , \"points\" : 200 , \"expiry\" : \"2022-07-31\" } { \"data\" : { \"createLoyaltyReward\" : { \"success\" : true , \"errors\" : null , \"loyaltyReward\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update a loyalty reward Request Variables Response mutation CreateLoyaltyReward ( $id : ID ! $loyaltyCardId : ID $productId : ID $points : Int $expiry : Date ){ updateLoyaltyReward ( input: { id: $id loyaltyCardId: $loyaltyCardId productId: $productId points: $points expiry: $expiry } ) { success errors loyaltyReward { id } } } { \"id\" : 1 , \"expiry\" : \"2022-08-08\" } { \"data\" : { \"updateLoyaltyReward\" : { \"success\" : true , \"errors\" : null , \"loyaltyReward\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create a stamp Request Variables Response mutation CreateStamp ( $consumerLoyaltyString : String ! ){ createStamp ( input: { consumerLoyaltyString: $consumerLoyaltyString } ) { success errors stamp { id } } } { \"consumerLoyaltyString\" : \"59841898004705\" } { \"data\" : { \"createStamp\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create stamps redemption intent Request Variables Response mutation ( $loyaltyCardId : ID ! ){ createStampsRedemptionIntent ( input: { loyaltyCardId: $loyaltyCardId } ) { success errors stampsRedemptionIntent { id code } } } { \"loyaltyCardId\" : 100 } { \"data\" : { \"createStampsRedemptionIntent\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" , \"code\" : \"...\" } } } } Confirm stamps redemption Request Variables Response mutation ( $code : String ! ){ confirmStampsRedemption ( input: { code: $code } ) { success errors stampsRedemption { id } } } { \"code\" : \"...\" } { \"data\" : { \"confirmStampsRedemption\" : { \"success\" : true , \"errors\" : null , \"stampsRedemption\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create a visit Request Variables Response mutation ( $consumerLoyaltyId : String ! $amountSpent : Decimal ! $amountSpentCurrency : String $storeId : ID ){ createVisit ( input: { consumerLoyaltyId: $consumerLoyaltyId amountSpent: $amountSpent amountSpentCurrency: $amountSpentCurrency storeId: $storeId } ) { success errors visit { id } } } { \"consumerLoyaltyId\" : \"59841898004705\" , \"amountSpent\" : \"20.00\" , \"storeId\" : 5 } { \"data\" : { \"createVisit\" : { \"success\" : true , \"errors\" : null , \"visit\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create points redemption intent Request Variables Response mutation ( $loyaltyCardId : ID ! $pointsToRedeem : Int $loyaltyRewardId : ID ){ createPointsRedemptionIntent ( input: { loyaltyCardId: $loyaltyCardId pointsToRedeem: $pointsTor_redeem loyaltyRewardId: $loyaltyRewardId } ) { success errors pointsRedemptionIntent { id code } } } { \"loyaltyCardId\" : 100 , \"pointsToRedeem: 50, \" loyal t yRewardId : 9 } { \"data\" : { \"createPointsRedemptionIntent\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" , \"code\" : \"...\" } } } } Confirm points redemption Request Variables Response mutation ( $code : String ! ){ confirmPointsRedemption ( input: { code: $code } ) { success errors pointsRedemption { id } } } { \"code\" : \"...\" } { \"data\" : { \"confirmPointsRedemption\" : { \"success\" : true , \"errors\" : null , \"pointsRedemption\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Verify redemption code Request Variables Response mutation ( $consumerLoyaltyId : $String $code : String ! ){ verifyRedemptionCode ( input: { consumerLoyaltyId: $consumerLoyaltyId code: $code } ) { success errors } } { \"consumerLoyaltyId\" : \"59841898004705\" , \"code\" : \"...\" } { \"data\" : { \"verifyRedemptionCode\" : { \"success\" : true , \"errors\" : null } } }","title":"Loyalties"},{"location":"loyalties/#loyalty-card-object","text":"Method Type Description id ID! pk Int merchant UserNode stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! products ProductNodeConnection! campaign CampaignNode name String! shortDescription String longDescription String placement LoyaltyCardPlacement startTime DateTime! endTime DateTime! redemptionCodeType LoyaltyCardRedemptionCodeType! enrollmentLimit Int repeatable Boolean repeatDelayHours Int dayStartTime Time dayEndTime Time daysOfWeek [String] weather String termsAndConditions String minimumSpendCurrency LoyaltyCardMinimumSpendCurrency minimumSpend String minPriceCurrency LoyaltyCardMinPriceCurrency minPrice String maxPriceCurrency LoyaltyCardMaxPriceCurrency maxPrice String loyaltyType LoyaltyCardLoyaltyType! pointsLoyaltyType LoyaltyCardPointsLoyaltyType code String redemptionExpirationDays Int initialPoints Int validityInMonths Int stampsNeeded Int stampExpirationDays Int maxPointsPerDay Int maxStampsPerDay Int pointsNeeded Int incrementalPoints Int dollarWorth Int pointWorthCurrency LoyaltyCardPointWorthCurrency pointWorth String status LoyaltyCardStatus! pictures LoyaltyCardPictureNodeConnection! rewards LoyaltyRewardNodeConnection! stampsRedemptionIntents StampsRedemptionIntentNodeConnection! stampsRedemptions StampsRedemptionNodeConnection! pointsRedemptionIntents PointsRedemptionIntentNodeConnection! pointsRedemptions PointsRedemptionNodeConnection! stamps StampNodeConnection minimumSpendAmount Float minPriceAmount Float maxPriceAmount Float pointWorthAmount Float checkedStamps Int earnedPoints Int rewardAvailable Boolean visits VisitNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"Loyalty card object"},{"location":"loyalties/#create-a-points-loyalty","text":"","title":"Create a points loyalty"},{"location":"loyalties/#reward-flat-amount","text":"Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Points loyalty\" , \"shortDescription\" : \"Points loyalty short description\" , \"longDescription\" : \"Points loyalty long description\" , \"loyaltyType\" : \"POINTS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"pointsLoyaltyType\" : \"FLAT\" , \"dollarWorth\" : 5 , \"maxPointsPerDay\" : 20 , \"initialPoints\" : 5 , \"pointWorth\" : \"1.00\" , \"pointsNeeded\" : 200 , \"incrementalPoints\" : 10 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Reward flat amount"},{"location":"loyalties/#reward-a-product","text":"Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Points loyalty\" , \"shortDescription\" : \"Points loyalty short description\" , \"longDescription\" : \"Points loyalty long description\" , \"loyaltyType\" : \"POINTS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"pointsLoyaltyType\" : \"PRODUCT\" , \"rewards\" : [ 5 , 6 , 7 ], \"dollarWorth\" : 5 , \"maxPointsPerDay\" : 20 , \"initialPoints\" : 5 , \"pointWorth\" : \"1.00\" , \"pointsNeeded\" : 200 , \"incrementalPoints\" : 10 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Reward a product"},{"location":"loyalties/#create-a-stamps-loyalty","text":"Request Variables Response mutation CreateLoyalty ( stores: [ ID ]! storeGroups: [ ID ]! campaignId: ID weather: String name: String ! shortDescription: String longDescription: String placement: String startTime: DateTime ! endTime: DateTime ! redemptionCodeType: String ! enrollmentLimit: Int ! dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ]! termsAndConditions: String loyaltyType: String ! code: String pictures: [ LoyaltyImageInput ]! repeatable: Boolean ! repeatDelayHours: Int redemptionExpirationDays: Int ! minPrice: Decimal ! minPriceCurrency: String maxPrice: Decimal ! maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ createLoyaltyCard ( input: { stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"name\" : \"Stamps loyalty\" , \"shortDescription\" : \"Stamps loyalty short description\" , \"longDescription\" : \"Stamps loyalty long description\" , \"loyaltyType\" : \"STAMPS\" , \"redemptionCodeType\" : \"AUTOGENERATED\" , \"enrollmentLimit\" : 2000 , \"repeatable\" : true , \"repeatDelayHours\" : 48 , \"redemptionExpirationDays\" : 24 , \"minPrice\" : \"10.00\" , \"maxPrice\" : \"100.00\" , \"stampsNeeded\" : 5 , \"stampExpirationDays\" : 3 , \"maxStampsPerDay\" : 1 , \"products\" : [ 1 , 2 , 3 ], \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"campaignId\" : 5 , \"stores\" : [ 7 , 8 , 9 ], \"storeGroups\" : [ 20 , 23 , 25 ] } { \"data\" : { \"createLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a stamps loyalty"},{"location":"loyalties/#update-a-loyalty-card","text":"Request Variables Response mutation UpdateLoyalty ( id: ID ! stores: [ ID ] storeGroups: [ ID ] campaignId: ID weather: String name: String shortDescription: String longDescription: String placement: String startTime: DateTime endTime: DateTime redemptionCodeType: String enrollmentLimit: Int dayStartTime: Time dayEndTime: Time daysOfWeek: [ String ] termsAndConditions: String loyaltyType: String code: String pictures: [ LoyaltyImageInput ] repeatable: Boolean repeatDelayHours: Int redemptionExpirationDays: Int minPrice: Decimal minPriceCurrency: String maxPrice: Decimal maxPriceCurrency: String minimumSpend: Decimal minimumSpendCurrency: String pointsLoyaltyType: String dollarWorth: Int maxPointsPerDay: Int initialPoints: Int pointWorth: Decimal pointWorthCurrency: String pointsNeeded: Int incrementalPoints: Int rewards: [ LoyaltyRewardInput ] products: [ ID ] stampsNeeded: Int stampExpirationDays: Int validityInMonths: Int maxStampsPerDay: Int ){ updateLoyaltyCard ( input: { id: $id stores: $stores storeGroups: $storeGroups campaignId: $campaignId weather: $weather name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek termsAndConditions: $termsAndConditions loyaltyType: $loyaltyType code: $code pictures: $pictures repeatable: $repeatable repeatDelayHours: $repeatDelayHours redemptionExpirationDays: $redemptionExpirationDays minPrice: $minPrice minPriceCurrency: $minPriceCurrency maxPrice: $maxPrice maxPriceCurrency: $maxPriceCurrency minimumSpend: $minimumSpend minimumSpendCurrency: $minimumSpendCurrency pointsLoyaltyType: $pointsLoyaltyType dollarWorth: $dollarWorth maxPointsPerDay: $maxPointsPerDay initialPoints: $initialPoints pointWorth: $pointWorth pointWorthCurrency: $pointWorthCurrency pointsNeeded: $pointsNeeded incrementalPoints: $incrementalPoints rewards: $rewards products: $products stampsNeeded: $stampsNeeded stampExpirationDays: $stampExpirationDays validityInMonths: $validityInMonths maxStampsPerDay: $maxStampsPerDay } ) { success errors loyaltyCard { pk id } } } { \"id\" : 100 , \"name\" : \"Stamps loyalty - edited\" } { \"data\" : { \"updateLoyaltyCard\" : { \"success\" : true , \"errors\" : null , \"loyaltyCard\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update a loyalty card"},{"location":"loyalties/#delete-a-loyalty-card","text":"Request Variables Response mutation DeleteLoyalty ( id: ID ! ){ updateLoyaltyCard ( input: { id: $id } ) { success errors } } { \"id\" : 100 } { \"data\" : { \"deleteLoyaltyCard\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a loyalty card"},{"location":"loyalties/#create-a-loyalty-reward","text":"Request Variables Response mutation CreateLoyaltyReward ( $loyaltyCardId : ID ! $productId : ID ! $points : Int ! $expiry : Date ! ){ createLoyaltyReward ( input: { loyaltyCardId: $loyaltyCardId productId: $productId points: $points expiry: $expiry } ) { success errors loyaltyReward { id } } } { \"loyaltyCardId\" : 100 , \"productId\" : 5 , \"points\" : 200 , \"expiry\" : \"2022-07-31\" } { \"data\" : { \"createLoyaltyReward\" : { \"success\" : true , \"errors\" : null , \"loyaltyReward\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a loyalty reward"},{"location":"loyalties/#update-a-loyalty-reward","text":"Request Variables Response mutation CreateLoyaltyReward ( $id : ID ! $loyaltyCardId : ID $productId : ID $points : Int $expiry : Date ){ updateLoyaltyReward ( input: { id: $id loyaltyCardId: $loyaltyCardId productId: $productId points: $points expiry: $expiry } ) { success errors loyaltyReward { id } } } { \"id\" : 1 , \"expiry\" : \"2022-08-08\" } { \"data\" : { \"updateLoyaltyReward\" : { \"success\" : true , \"errors\" : null , \"loyaltyReward\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update a loyalty reward"},{"location":"loyalties/#create-a-stamp","text":"Request Variables Response mutation CreateStamp ( $consumerLoyaltyString : String ! ){ createStamp ( input: { consumerLoyaltyString: $consumerLoyaltyString } ) { success errors stamp { id } } } { \"consumerLoyaltyString\" : \"59841898004705\" } { \"data\" : { \"createStamp\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a stamp"},{"location":"loyalties/#create-stamps-redemption-intent","text":"Request Variables Response mutation ( $loyaltyCardId : ID ! ){ createStampsRedemptionIntent ( input: { loyaltyCardId: $loyaltyCardId } ) { success errors stampsRedemptionIntent { id code } } } { \"loyaltyCardId\" : 100 } { \"data\" : { \"createStampsRedemptionIntent\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" , \"code\" : \"...\" } } } }","title":"Create stamps redemption intent"},{"location":"loyalties/#confirm-stamps-redemption","text":"Request Variables Response mutation ( $code : String ! ){ confirmStampsRedemption ( input: { code: $code } ) { success errors stampsRedemption { id } } } { \"code\" : \"...\" } { \"data\" : { \"confirmStampsRedemption\" : { \"success\" : true , \"errors\" : null , \"stampsRedemption\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Confirm stamps redemption"},{"location":"loyalties/#create-a-visit","text":"Request Variables Response mutation ( $consumerLoyaltyId : String ! $amountSpent : Decimal ! $amountSpentCurrency : String $storeId : ID ){ createVisit ( input: { consumerLoyaltyId: $consumerLoyaltyId amountSpent: $amountSpent amountSpentCurrency: $amountSpentCurrency storeId: $storeId } ) { success errors visit { id } } } { \"consumerLoyaltyId\" : \"59841898004705\" , \"amountSpent\" : \"20.00\" , \"storeId\" : 5 } { \"data\" : { \"createVisit\" : { \"success\" : true , \"errors\" : null , \"visit\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a visit"},{"location":"loyalties/#create-points-redemption-intent","text":"Request Variables Response mutation ( $loyaltyCardId : ID ! $pointsToRedeem : Int $loyaltyRewardId : ID ){ createPointsRedemptionIntent ( input: { loyaltyCardId: $loyaltyCardId pointsToRedeem: $pointsTor_redeem loyaltyRewardId: $loyaltyRewardId } ) { success errors pointsRedemptionIntent { id code } } } { \"loyaltyCardId\" : 100 , \"pointsToRedeem: 50, \" loyal t yRewardId : 9 } { \"data\" : { \"createPointsRedemptionIntent\" : { \"success\" : true , \"errors\" : null , \"stamp\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" , \"code\" : \"...\" } } } }","title":"Create points redemption intent"},{"location":"loyalties/#confirm-points-redemption","text":"Request Variables Response mutation ( $code : String ! ){ confirmPointsRedemption ( input: { code: $code } ) { success errors pointsRedemption { id } } } { \"code\" : \"...\" } { \"data\" : { \"confirmPointsRedemption\" : { \"success\" : true , \"errors\" : null , \"pointsRedemption\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Confirm points redemption"},{"location":"loyalties/#verify-redemption-code","text":"Request Variables Response mutation ( $consumerLoyaltyId : $String $code : String ! ){ verifyRedemptionCode ( input: { consumerLoyaltyId: $consumerLoyaltyId code: $code } ) { success errors } } { \"consumerLoyaltyId\" : \"59841898004705\" , \"code\" : \"...\" } { \"data\" : { \"verifyRedemptionCode\" : { \"success\" : true , \"errors\" : null } } }","title":"Verify redemption code"},{"location":"merchants/","text":"Create a staff merchant By running the payload below, the merchant will receive two email, the first is an activation email and the second contains an auto generated password for him to login. Request Variables Response mutation ( $email : String ! $firstname : String ! $lastname : String ! $phoneNumber : String $country : String $city : String $street : String $zipCode : String $birthday : Date $stores : [ ID ] $roles : [ ID ] ) { createMerchant ( input: { email: $email firstname: $firstname lastname: $lastname birthday: $birthday phoneNumber: $phoneNumber country: $country city: $city zipCode: $zipCode street: $street stores: $stores roles: $roles } ) { success errors merchant { id } } } { \"email\" : \"joxiye6010@tlhao86.com\" , \"firstname\" : \"Manager\" , \"lastname\" : \"One\" , \"stores\" : [ 5 , 7 , 15 ], \"roles\" : [ 6 ], \"merchantType\" : \"STAFF\" } { \"data\" : { \"createMerchant\" : { \"success\" : true , \"errors\" : null , \"merchant\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete a merchant Request Variables Response mutation ( $id : ID ! ) { deleteMerchant ( input: { id: $id } ) { success errors } } { \"id\" : 10 } { \"data\" : { \"deleteMerchant\" : { \"success\" : true , \"errors\" : null } } } Recruit a merchant to a store mutation ( $merchantId : ID ! $storeId : ID ! ) { addStoreToMerchant ( input: { merchantId: $merchantId storeId: $storeId } ) { success errors } } Remove a merchant from a store mutation ( $merchantId : ID ! $storeId : ID ! ) { removeStoreFromMerchant ( input: { merchantId: $merchantId storeId: $storeId } ) { success errors } } Recruit a merchant to a store group mutation ( $merchantId : ID ! $storeGroupId : ID ! ) { addStoreGroupToMerchant ( input: { merchantId: $merchantId storeGroupId: $storeGroupId } ) { success errors } } Remove a merchant from a store group mutation ( $merchantId : ID ! $storeGroupId : ID ! ) { removeStoreGroupFromMerchant ( input: { merchantId: $merchantId storeGroupId: $storeGroupId } ) { success errors } }","title":"Merchants"},{"location":"merchants/#create-a-staff-merchant","text":"By running the payload below, the merchant will receive two email, the first is an activation email and the second contains an auto generated password for him to login. Request Variables Response mutation ( $email : String ! $firstname : String ! $lastname : String ! $phoneNumber : String $country : String $city : String $street : String $zipCode : String $birthday : Date $stores : [ ID ] $roles : [ ID ] ) { createMerchant ( input: { email: $email firstname: $firstname lastname: $lastname birthday: $birthday phoneNumber: $phoneNumber country: $country city: $city zipCode: $zipCode street: $street stores: $stores roles: $roles } ) { success errors merchant { id } } } { \"email\" : \"joxiye6010@tlhao86.com\" , \"firstname\" : \"Manager\" , \"lastname\" : \"One\" , \"stores\" : [ 5 , 7 , 15 ], \"roles\" : [ 6 ], \"merchantType\" : \"STAFF\" } { \"data\" : { \"createMerchant\" : { \"success\" : true , \"errors\" : null , \"merchant\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a staff merchant"},{"location":"merchants/#delete-a-merchant","text":"Request Variables Response mutation ( $id : ID ! ) { deleteMerchant ( input: { id: $id } ) { success errors } } { \"id\" : 10 } { \"data\" : { \"deleteMerchant\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a merchant"},{"location":"merchants/#recruit-a-merchant-to-a-store","text":"mutation ( $merchantId : ID ! $storeId : ID ! ) { addStoreToMerchant ( input: { merchantId: $merchantId storeId: $storeId } ) { success errors } }","title":"Recruit a merchant to a store"},{"location":"merchants/#remove-a-merchant-from-a-store","text":"mutation ( $merchantId : ID ! $storeId : ID ! ) { removeStoreFromMerchant ( input: { merchantId: $merchantId storeId: $storeId } ) { success errors } }","title":"Remove a merchant from a store"},{"location":"merchants/#recruit-a-merchant-to-a-store-group","text":"mutation ( $merchantId : ID ! $storeGroupId : ID ! ) { addStoreGroupToMerchant ( input: { merchantId: $merchantId storeGroupId: $storeGroupId } ) { success errors } }","title":"Recruit a merchant to a store group"},{"location":"merchants/#remove-a-merchant-from-a-store-group","text":"mutation ( $merchantId : ID ! $storeGroupId : ID ! ) { removeStoreGroupFromMerchant ( input: { merchantId: $merchantId storeGroupId: $storeGroupId } ) { success errors } }","title":"Remove a merchant from a store group"},{"location":"notifications/","text":"Subscribe to notifications The payload below shoud run with customer credentials. Request Variables Response mutation ( $merchantId : ID $topics : [ String ]! # OFFER, LOYALTY, ORDER, PROMOTION $types : [ String ]! # EMAIL, SMS, PUSH ){ setNotificationsSubscription ( input: { merchantId: $merchantId topics: $topics types: $types } ) { success errors notificationsSubscription { pk id } } } { \"merchantId\" : 25 , \"topics\" : [ \"OFFER\" , \"ORDER\" ], \"types\" : [ \"EMAIL\" , \"PUSH\" ] } { \"data\" : { \"setNotificationsSubscription\" : { \"success\" : true , \"errors\" : null , \"notificationsSubscription\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Set notification device Request Variables Response mutation ( $subscriptionId : ID ! $deviceType : String ! $pushSubscription : JSONString # Web Push subscription json payload $fcmToken : String # Firebase Cloud Messaging token $apnsToken : String # Apple Push Notification Service token ){ setNotificationsDevice ( input: { subscriptionId: $subscriptionId deviceType: $deviceType pushSubscription: $pushSubscription fcmToken: $fcmToken apnsToken: $apnsToken } ) { success errors notificationsDevice { pk id } } } { \"subscriptionId\" : 25 , \"deviceType\" : \"ANDROID\" , \"fcmToken\" : \"<fcm-token>\" , } { \"data\" : { \"setNotificationsDevice\" : { \"success\" : true , \"errors\" : null , \"notificationsDevice\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Create/send a notification The payload below shoud run with merchant credentials. The notification will be sent immediately after creation. Request Variables Response mutation ( $subscriptionId : ID ! $topic : String $emailSubject : String $emailBody : String $pushTitle : String $pushText : String $smsText : String ){ createNotification ( input: { subscriptionId: $subscriptionId topic: $topic emailSubject: $emailSubject emailBody: $emailBody pushTitle: $pushTitle pushText: $pushText smsText: $smsText } ) { success errors notification { pk id } } } { \"subscriptionId\" : 25 , \"pushTitle\" : \"Hey {{ consumer.firstname }}!\" , \"pushText\" : \"This is a test push notification\" } { \"data\" : { \"createNotification\" : { \"success\" : true , \"errors\" : null , \"notification\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Notifications"},{"location":"notifications/#subscribe-to-notifications","text":"The payload below shoud run with customer credentials. Request Variables Response mutation ( $merchantId : ID $topics : [ String ]! # OFFER, LOYALTY, ORDER, PROMOTION $types : [ String ]! # EMAIL, SMS, PUSH ){ setNotificationsSubscription ( input: { merchantId: $merchantId topics: $topics types: $types } ) { success errors notificationsSubscription { pk id } } } { \"merchantId\" : 25 , \"topics\" : [ \"OFFER\" , \"ORDER\" ], \"types\" : [ \"EMAIL\" , \"PUSH\" ] } { \"data\" : { \"setNotificationsSubscription\" : { \"success\" : true , \"errors\" : null , \"notificationsSubscription\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Subscribe to notifications"},{"location":"notifications/#set-notification-device","text":"Request Variables Response mutation ( $subscriptionId : ID ! $deviceType : String ! $pushSubscription : JSONString # Web Push subscription json payload $fcmToken : String # Firebase Cloud Messaging token $apnsToken : String # Apple Push Notification Service token ){ setNotificationsDevice ( input: { subscriptionId: $subscriptionId deviceType: $deviceType pushSubscription: $pushSubscription fcmToken: $fcmToken apnsToken: $apnsToken } ) { success errors notificationsDevice { pk id } } } { \"subscriptionId\" : 25 , \"deviceType\" : \"ANDROID\" , \"fcmToken\" : \"<fcm-token>\" , } { \"data\" : { \"setNotificationsDevice\" : { \"success\" : true , \"errors\" : null , \"notificationsDevice\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Set notification device"},{"location":"notifications/#createsend-a-notification","text":"The payload below shoud run with merchant credentials. The notification will be sent immediately after creation. Request Variables Response mutation ( $subscriptionId : ID ! $topic : String $emailSubject : String $emailBody : String $pushTitle : String $pushText : String $smsText : String ){ createNotification ( input: { subscriptionId: $subscriptionId topic: $topic emailSubject: $emailSubject emailBody: $emailBody pushTitle: $pushTitle pushText: $pushText smsText: $smsText } ) { success errors notification { pk id } } } { \"subscriptionId\" : 25 , \"pushTitle\" : \"Hey {{ consumer.firstname }}!\" , \"pushText\" : \"This is a test push notification\" } { \"data\" : { \"createNotification\" : { \"success\" : true , \"errors\" : null , \"notification\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create/send a notification"},{"location":"offers/","text":"You can create offer that you can apply to sales and customers. An offer can have either a fixed dollar amount or be a percentage discount. Create an offer Create an new offer Request Variables Response mutation CreateOffer ( $stores : [ ID ]! $storeGroups : [ ID ]! $products : [ ID ] $name : String ! $shortDescription : String ! $longDescription : String ! $placement : String ! $startTime : DateTime ! $endTime : DateTime ! $redemptionCodeType : String ! $enrollmentLimit : Int ! $repeatable : Boolean ! $dayStartTime : Time $dayEndTime : Time $daysOfWeek : [ String ]! $earnPoints : Boolean ! $repeatDelayHours : Int $termsAndConditions : String $minimumSpend : String $code : String $pictures : [ OfferImageInput ]! $campaignId : ID ! $weather : String ! $offerType : String ! # PERCENTAGE, FIXED_AMOUNT, BOGO $offerValue : Float ! $numOfItems : Int ){ createOffer ( input: { stores: $stores storeGroups: $storeGroups products: $products name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit repeatable: $repeatable dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek earnPoints: $earnPoints repeatDelayHours: $repeatDelayHours termsAndConditions: $termsAndConditions minimumSpend: $minimumSpend code: $code pictures: $pictures campaign: $campaignId weather: $weather offerType: $offerType offerValue: $offerValue numOfItems: $numOfItems } ) { success errors offer { pk id } } } { \"name\" : \"20% off Birth day offer\" , \"campaign\" : 3 , \"longDescription\" : \"20% off Birth day offer\" , \"shortDescription\" : \"20% off Birth day offer\" , \"pictures\" : [], \"termsAndConditions\" : \"\" , \"segmentationRules\" : \"[]\" , \"offerType\" : \"PERCENTAGE\" , \"offerValue\" : 20 , \"numOfItems\" : 1 , \"products\" : [], \"redemptionCodeType\" : \"AUTOGENERATED\" , \"code\" : \"\" , \"minimumSpend\" : \"0.00\" , \"earnPoints\" : true , \"repeatDelayHours\" : 48 , \"repeatable\" : true , \"stores\" : [ \"1\" , \"9\" , \"2\" , \"10\" , \"15\" , \"13\" , \"7\" , \"12\" , \"8\" , \"11\" , \"14\" ], \"storeGroups\" : [], \"enrollmentLimit\" : 100 , \"enrollmentUnlimited\" : true , \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"placement\" : \"TOP\" , \"weather\" : \"Sunny\" , \"campaignId\" : 1 } { \"data\" : { \"createOffer\" : { \"success\" : true , \"errors\" : null , \"offer\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update an offer Request Variables Response mutation CreateOffer ( $id : ID ! $stores : [ ID ] $storeGroups : [ ID ] $products : [ ID ] $name : String $shortDescription : String $longDescription : String $placement : String $startTime : DateTime $endTime : DateTime $redemptionCodeType : String $enrollmentLimit : Int $repeatable : Boolean $dayStartTime : Time $dayEndTime : Time $daysOfWeek : [ String ] $earnPoints : Boolean $repeatDelayHours : Int $termsAndConditions : String $minimumSpend : String $code : String $pictures : [ OfferImageInput ] $campaignId : ID $weather : String $offerType : String # PERCENTAGE, FIXED_AMOUNT, BOGO $offerValue : Float $numOfItems : Int ){ updateOffer ( input: { id: $id stores: $stores storeGroups: $storeGroups products: $products name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit repeatable: $repeatable dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek earnPoints: $earnPoints repeatDelayHours: $repeatDelayHours termsAndConditions: $termsAndConditions minimumSpend: $minimumSpend code: $code pictures: $pictures campaign: $campaignId weather: $weather offerType: $offerType offerValue: $offerValue numOfItems: $numOfItems } ) { success errors offer { pk id } } } { \"name\" : \"Editd offer name\" } { \"data\" : { \"updateOffer\" : { \"success\" : true , \"errors\" : null , \"offer\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete an offer Request Variables Response mutation ( $id : ID ! ){ deleteOffer ( input: { id: $id } ) { success errors } } { \"id\" : 5 } { \"data\" : { \"deleteOffer\" : { \"success\" : true , \"errors\" : null } } } List Offers List all the offers available by store or merchant query { offers { edges { node { pk id } } } } Get a single offer query { offer ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } } Offer Object Method Type Description id ID! Unique ID of the offer pk Int Primary Key of the offer merchant UserNode Created by Merchant campaign CampaignNode! Campaign ID stores StoreNodeConnection! Apply to specific stores storeGroups StoreGroupNodeConnection! Apply to store groups products ProductNodeConnection! Apply to specific items name String! Unique name of the promotion shortDescription String! Mobile optimized short description of the discount longDescription String! Long description of the discount offerType OfferOfferType! FIXED_AMOUNT or Percentage discount offerValue Float! The value or percentage of the discount. numOfItems Int Min number of items. Non-Mandatory placement OfferPlacement! Discount placement in mobile or web. Ex: Front Page or Top banner startTime DateTime! Discount start datetime endTime DateTime! Discount end datetime redemptionCodeType OfferRedemptionCodeType! Autogenerated or fixed redemption code enrollmentLimit Int! Max number of promotions repeatable Boolean! How many times a customer can redeem this promotion repeatDelayHours Int Any time delay to redeem the promotion dayStartTime Time Set the start time this discount is valid(Ex: happy Hours) dayEndTime Time Set the end time this discount is valid(Ex: happy Hours) daysOfWeek [String] Set the day of week this offer is valid.(Ex: redeemable on saturday only) weather String! Assign based on weather earnPoints Boolean! Redeeming this offer will earn loyalty points or not segmentationRules JSONString Customer who will be targeted based on segmentation termsAndConditions String Terms and conditions minimumSpendCurrency OfferMinimumSpendCurrency Currency minimumSpend String Require a minimum subtotal to qualify for discount (Example: Spend $30 and get $10 off) code String Provide the code is not Autogenerated totalRating Float! Customer provided reviews status OfferStatus! Is active or not refreshHours Int! Default to '0' redemptionIntents RedemptionIntentNodeConnection! redemptions RedemptionNodeConnection How many time this offer is redeemed pictures OfferPictureNodeConnection! Image of the offer offerConsumers OfferConsumerNodeConnection! Targeted consumer ID minimumSpendAmount Float Require a minimum subtotal to qualify for discount (Example: Spend $30 and get $10 off) consumers OfferConsumerNodeConnection Return consumers who redeemed this offer extraInfo JSONString createdAt DateTime! Offer create timestamp updatedAt DateTime! offer last update timestamp","title":"Offers"},{"location":"offers/#create-an-offer","text":"Create an new offer Request Variables Response mutation CreateOffer ( $stores : [ ID ]! $storeGroups : [ ID ]! $products : [ ID ] $name : String ! $shortDescription : String ! $longDescription : String ! $placement : String ! $startTime : DateTime ! $endTime : DateTime ! $redemptionCodeType : String ! $enrollmentLimit : Int ! $repeatable : Boolean ! $dayStartTime : Time $dayEndTime : Time $daysOfWeek : [ String ]! $earnPoints : Boolean ! $repeatDelayHours : Int $termsAndConditions : String $minimumSpend : String $code : String $pictures : [ OfferImageInput ]! $campaignId : ID ! $weather : String ! $offerType : String ! # PERCENTAGE, FIXED_AMOUNT, BOGO $offerValue : Float ! $numOfItems : Int ){ createOffer ( input: { stores: $stores storeGroups: $storeGroups products: $products name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit repeatable: $repeatable dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek earnPoints: $earnPoints repeatDelayHours: $repeatDelayHours termsAndConditions: $termsAndConditions minimumSpend: $minimumSpend code: $code pictures: $pictures campaign: $campaignId weather: $weather offerType: $offerType offerValue: $offerValue numOfItems: $numOfItems } ) { success errors offer { pk id } } } { \"name\" : \"20% off Birth day offer\" , \"campaign\" : 3 , \"longDescription\" : \"20% off Birth day offer\" , \"shortDescription\" : \"20% off Birth day offer\" , \"pictures\" : [], \"termsAndConditions\" : \"\" , \"segmentationRules\" : \"[]\" , \"offerType\" : \"PERCENTAGE\" , \"offerValue\" : 20 , \"numOfItems\" : 1 , \"products\" : [], \"redemptionCodeType\" : \"AUTOGENERATED\" , \"code\" : \"\" , \"minimumSpend\" : \"0.00\" , \"earnPoints\" : true , \"repeatDelayHours\" : 48 , \"repeatable\" : true , \"stores\" : [ \"1\" , \"9\" , \"2\" , \"10\" , \"15\" , \"13\" , \"7\" , \"12\" , \"8\" , \"11\" , \"14\" ], \"storeGroups\" : [], \"enrollmentLimit\" : 100 , \"enrollmentUnlimited\" : true , \"startTime\" : \"2022-04-25T11:40\" , \"endTime\" : \"2023-12-31T23:40\" , \"dayStartTime\" : \"06:11\" , \"dayEndTime\" : \"23:41\" , \"daysOfWeek\" : [ \"MONDAY\" , \"TUESDAY\" , \"WEDNESDAY\" , \"THURSDAY\" , \"FRIDAY\" , \"SATURDAY\" , \"SUNDAY\" ], \"placement\" : \"TOP\" , \"weather\" : \"Sunny\" , \"campaignId\" : 1 } { \"data\" : { \"createOffer\" : { \"success\" : true , \"errors\" : null , \"offer\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create an offer"},{"location":"offers/#update-an-offer","text":"Request Variables Response mutation CreateOffer ( $id : ID ! $stores : [ ID ] $storeGroups : [ ID ] $products : [ ID ] $name : String $shortDescription : String $longDescription : String $placement : String $startTime : DateTime $endTime : DateTime $redemptionCodeType : String $enrollmentLimit : Int $repeatable : Boolean $dayStartTime : Time $dayEndTime : Time $daysOfWeek : [ String ] $earnPoints : Boolean $repeatDelayHours : Int $termsAndConditions : String $minimumSpend : String $code : String $pictures : [ OfferImageInput ] $campaignId : ID $weather : String $offerType : String # PERCENTAGE, FIXED_AMOUNT, BOGO $offerValue : Float $numOfItems : Int ){ updateOffer ( input: { id: $id stores: $stores storeGroups: $storeGroups products: $products name: $name shortDescription: $shortDescription longDescription: $longDescription placement: $placement startTime: $startTime endTime: $endTime redemptionCodeType: $redemptionCodeType enrollmentLimit: $enrollmentLimit repeatable: $repeatable dayStartTime: $dayStartTime dayEndTime: $dayEndTime daysOfWeek: $daysOfWeek earnPoints: $earnPoints repeatDelayHours: $repeatDelayHours termsAndConditions: $termsAndConditions minimumSpend: $minimumSpend code: $code pictures: $pictures campaign: $campaignId weather: $weather offerType: $offerType offerValue: $offerValue numOfItems: $numOfItems } ) { success errors offer { pk id } } } { \"name\" : \"Editd offer name\" } { \"data\" : { \"updateOffer\" : { \"success\" : true , \"errors\" : null , \"offer\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update an offer"},{"location":"offers/#delete-an-offer","text":"Request Variables Response mutation ( $id : ID ! ){ deleteOffer ( input: { id: $id } ) { success errors } } { \"id\" : 5 } { \"data\" : { \"deleteOffer\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete an offer"},{"location":"offers/#list-offers","text":"List all the offers available by store or merchant query { offers { edges { node { pk id } } } }","title":"List Offers"},{"location":"offers/#get-a-single-offer","text":"query { offer ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Get a single offer"},{"location":"offers/#offer-object","text":"Method Type Description id ID! Unique ID of the offer pk Int Primary Key of the offer merchant UserNode Created by Merchant campaign CampaignNode! Campaign ID stores StoreNodeConnection! Apply to specific stores storeGroups StoreGroupNodeConnection! Apply to store groups products ProductNodeConnection! Apply to specific items name String! Unique name of the promotion shortDescription String! Mobile optimized short description of the discount longDescription String! Long description of the discount offerType OfferOfferType! FIXED_AMOUNT or Percentage discount offerValue Float! The value or percentage of the discount. numOfItems Int Min number of items. Non-Mandatory placement OfferPlacement! Discount placement in mobile or web. Ex: Front Page or Top banner startTime DateTime! Discount start datetime endTime DateTime! Discount end datetime redemptionCodeType OfferRedemptionCodeType! Autogenerated or fixed redemption code enrollmentLimit Int! Max number of promotions repeatable Boolean! How many times a customer can redeem this promotion repeatDelayHours Int Any time delay to redeem the promotion dayStartTime Time Set the start time this discount is valid(Ex: happy Hours) dayEndTime Time Set the end time this discount is valid(Ex: happy Hours) daysOfWeek [String] Set the day of week this offer is valid.(Ex: redeemable on saturday only) weather String! Assign based on weather earnPoints Boolean! Redeeming this offer will earn loyalty points or not segmentationRules JSONString Customer who will be targeted based on segmentation termsAndConditions String Terms and conditions minimumSpendCurrency OfferMinimumSpendCurrency Currency minimumSpend String Require a minimum subtotal to qualify for discount (Example: Spend $30 and get $10 off) code String Provide the code is not Autogenerated totalRating Float! Customer provided reviews status OfferStatus! Is active or not refreshHours Int! Default to '0' redemptionIntents RedemptionIntentNodeConnection! redemptions RedemptionNodeConnection How many time this offer is redeemed pictures OfferPictureNodeConnection! Image of the offer offerConsumers OfferConsumerNodeConnection! Targeted consumer ID minimumSpendAmount Float Require a minimum subtotal to qualify for discount (Example: Spend $30 and get $10 off) consumers OfferConsumerNodeConnection Return consumers who redeemed this offer extraInfo JSONString createdAt DateTime! Offer create timestamp updatedAt DateTime! offer last update timestamp","title":"Offer Object"},{"location":"rate_limits_and_error_handling/","text":"To ensure our platform remains stable and fair for everyone, all LoyaltyDish APIs are rate-limited. Rate limits LoyaltyDish API is rate limited to 1000 requets/m. Error handling Our API replies with 3 types of errors for various reasons. Each error contains a code and a message properties. permission_denied : returned when the user does not have access to the requested resources. does_not_exist : returned when the requested resource does not exist. invalid : returned when the request properties or a business requirement is not fulfilled.","title":"Rate limits & error handling"},{"location":"rate_limits_and_error_handling/#rate-limits","text":"LoyaltyDish API is rate limited to 1000 requets/m.","title":"Rate limits"},{"location":"rate_limits_and_error_handling/#error-handling","text":"Our API replies with 3 types of errors for various reasons. Each error contains a code and a message properties. permission_denied : returned when the user does not have access to the requested resources. does_not_exist : returned when the requested resource does not exist. invalid : returned when the request properties or a business requirement is not fulfilled.","title":"Error handling"},{"location":"roles_and_permissions/","text":"List available permissions query { permissions { edges { node { pk id codename displayName } } } } Add permission to merchant Request Variables Response mutation ( $merchantId : ID ! $permissionId : ID ! ) { addPermissionToMerchant ( input: { merchantId: $merchantId permissionId: $permissionId } ) { success errors } } { \"merchantId\" : 84 , \"permissionId\" : 5 } { \"data\" : { \"addPermissionToMerchant\" : { \"success\" : true , \"errors\" : null } } } Create a role Request Variables Response mutation ( $displayName : String ! $permissions : [ ID ] ) { createRole ( input: { displayName: $displayName permissions: $permissions } ) { success errors } } { \"displayName\" : \"Manager\" , \"permissions\" : [ 1 , 2 , 3 ] } { \"data\" : { \"createRole\" : { \"success\" : true , \"errors\" : null } } } Update a role Request Variables Response mutation ( $id : ID ! $displayName : String $permissions : [ ID ] ) { updateRole ( input: { id: $id displayName: $displayName permissions: $permissions } ) { success errors } } { \"id\" : 1 , \"displayName\" : \"Manager - edited\" } { \"data\" : { \"updateRole\" : { \"success\" : true , \"errors\" : null } } } Delete a role Request Variables Response mutation ( $id : ID ! ) { deleteRole ( input: { id: $id } ) { success errors } } { \"id\" : 1 } { \"data\" : { \"deleteRole\" : { \"success\" : true , \"errors\" : null } } } Add role to merchant Request Variables Response mutation ( $merchantId : ID ! $roleId : ID ! ) { addRoleToMerchant ( input: { merchantId: $merchantId roleId: $roleId } ) { success errors } } { \"merchantId\" : 84 , \"roleId\" : 5 } { \"data\" : { \"addRoleToMerchant\" : { \"success\" : true , \"errors\" : null } } }","title":"Roles & permissions"},{"location":"roles_and_permissions/#list-available-permissions","text":"query { permissions { edges { node { pk id codename displayName } } } }","title":"List available permissions"},{"location":"roles_and_permissions/#add-permission-to-merchant","text":"Request Variables Response mutation ( $merchantId : ID ! $permissionId : ID ! ) { addPermissionToMerchant ( input: { merchantId: $merchantId permissionId: $permissionId } ) { success errors } } { \"merchantId\" : 84 , \"permissionId\" : 5 } { \"data\" : { \"addPermissionToMerchant\" : { \"success\" : true , \"errors\" : null } } }","title":"Add permission to merchant"},{"location":"roles_and_permissions/#create-a-role","text":"Request Variables Response mutation ( $displayName : String ! $permissions : [ ID ] ) { createRole ( input: { displayName: $displayName permissions: $permissions } ) { success errors } } { \"displayName\" : \"Manager\" , \"permissions\" : [ 1 , 2 , 3 ] } { \"data\" : { \"createRole\" : { \"success\" : true , \"errors\" : null } } }","title":"Create a role"},{"location":"roles_and_permissions/#update-a-role","text":"Request Variables Response mutation ( $id : ID ! $displayName : String $permissions : [ ID ] ) { updateRole ( input: { id: $id displayName: $displayName permissions: $permissions } ) { success errors } } { \"id\" : 1 , \"displayName\" : \"Manager - edited\" } { \"data\" : { \"updateRole\" : { \"success\" : true , \"errors\" : null } } }","title":"Update a role"},{"location":"roles_and_permissions/#delete-a-role","text":"Request Variables Response mutation ( $id : ID ! ) { deleteRole ( input: { id: $id } ) { success errors } } { \"id\" : 1 } { \"data\" : { \"deleteRole\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a role"},{"location":"roles_and_permissions/#add-role-to-merchant","text":"Request Variables Response mutation ( $merchantId : ID ! $roleId : ID ! ) { addRoleToMerchant ( input: { merchantId: $merchantId roleId: $roleId } ) { success errors } } { \"merchantId\" : 84 , \"roleId\" : 5 } { \"data\" : { \"addRoleToMerchant\" : { \"success\" : true , \"errors\" : null } } }","title":"Add role to merchant"},{"location":"segment/","text":"LoyaltyDish Segmentation Editor Upon creating an offer for your customers on LoyaltyDish, you often want this offer to appear to just a portion of those customers that meet certain criteria and not all of them. Our segmentation editor helps you achieve that by providing a UI to chain filters based on customer properties and behavior with logical operators (AND, OR). Segmentation editor GraphQL API The segmentation filters chain in Loyaltydish\u2019s codebase is represented in a form of nested arrays: [[ \"gender\" , \"exact\" , \"MALE\" ], \"AND\" , [ \"redemptions__offer\" , \"in\" , [ \"194\" , \"60\" ]]] In order to retrieve the list customers that fulfill these conditions, use the consumers query: Request Variables query ( $segmentationRules : JSONString ) { consumers ( segmentationRules : $segmentationRules ) { count edges { node { firstname lastname } } } } { \"segmentationRules\" : \"[[\\\"gender\\\",\\\"exact\\\",\\\"MALE\\\"],\\\"AND\\\",[\\\"redemptions__offer\\\",\\\"in\\\",[\\\"194\\\",\\\"60\\\"]]]\" }","title":"Segment"},{"location":"segment/#loyaltydish-segmentation-editor","text":"Upon creating an offer for your customers on LoyaltyDish, you often want this offer to appear to just a portion of those customers that meet certain criteria and not all of them. Our segmentation editor helps you achieve that by providing a UI to chain filters based on customer properties and behavior with logical operators (AND, OR).","title":"LoyaltyDish Segmentation Editor"},{"location":"segment/#segmentation-editor-graphql-api","text":"The segmentation filters chain in Loyaltydish\u2019s codebase is represented in a form of nested arrays: [[ \"gender\" , \"exact\" , \"MALE\" ], \"AND\" , [ \"redemptions__offer\" , \"in\" , [ \"194\" , \"60\" ]]] In order to retrieve the list customers that fulfill these conditions, use the consumers query: Request Variables query ( $segmentationRules : JSONString ) { consumers ( segmentationRules : $segmentationRules ) { count edges { node { firstname lastname } } } } { \"segmentationRules\" : \"[[\\\"gender\\\",\\\"exact\\\",\\\"MALE\\\"],\\\"AND\\\",[\\\"redemptions__offer\\\",\\\"in\\\",[\\\"194\\\",\\\"60\\\"]]]\" }","title":"Segmentation editor GraphQL API"},{"location":"store_groups/","text":"Create store group Request Variables Response mutation ( $name : String ! $stores : [ ID ] ){ createStoreGroup ( input: { name: $name stores: $stores } ) { success errors storeGroup { id } } } { \"name\" : \"Test store group\" , \"stores\" : [ 100 , 154 , 123 ] } { \"data\" : { \"createStoreGroup\" : { \"success\" : true , \"errors\" : null , \"storeGroup\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update store group Request Variables Response mutation ( $id : ID ! $name : String $stores : [ ID ] ){ updateStoreGroup ( input: { id: $id name: $name stores: $stores } ) { success errors storeGroup { id } } } { \"id\" : 4 , \"name\" : \"Test store group\" , \"stores\" : [ 100 , 154 , 123 ] } { \"data\" : { \"updateStoreGroup\" : { \"success\" : true , \"errors\" : null , \"storeGroup\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete store group Request Variables Response mutation ( $id : ID ! ){ deleteStoreGroup ( input: { id: $id } ) { success errors } } { \"id\" : 4 } { \"data\" : { \"deleteStoreGroup\" : { \"success\" : true , \"errors\" : null } } } List store groups query { storeGroups { edges { node { pk id } } } } Get a single store group query { storeGroup ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Store groups"},{"location":"store_groups/#create-store-group","text":"Request Variables Response mutation ( $name : String ! $stores : [ ID ] ){ createStoreGroup ( input: { name: $name stores: $stores } ) { success errors storeGroup { id } } } { \"name\" : \"Test store group\" , \"stores\" : [ 100 , 154 , 123 ] } { \"data\" : { \"createStoreGroup\" : { \"success\" : true , \"errors\" : null , \"storeGroup\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create store group"},{"location":"store_groups/#update-store-group","text":"Request Variables Response mutation ( $id : ID ! $name : String $stores : [ ID ] ){ updateStoreGroup ( input: { id: $id name: $name stores: $stores } ) { success errors storeGroup { id } } } { \"id\" : 4 , \"name\" : \"Test store group\" , \"stores\" : [ 100 , 154 , 123 ] } { \"data\" : { \"updateStoreGroup\" : { \"success\" : true , \"errors\" : null , \"storeGroup\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update store group"},{"location":"store_groups/#delete-store-group","text":"Request Variables Response mutation ( $id : ID ! ){ deleteStoreGroup ( input: { id: $id } ) { success errors } } { \"id\" : 4 } { \"data\" : { \"deleteStoreGroup\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete store group"},{"location":"store_groups/#list-store-groups","text":"query { storeGroups { edges { node { pk id } } } }","title":"List store groups"},{"location":"store_groups/#get-a-single-store-group","text":"query { storeGroup ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Get a single store group"},{"location":"stores/","text":"Rereive information about the Merchant Stores. Store API will helps to create and manage all stores under the merchant. The store node Method Type Description id ID! Primary key extraInfo JSONString isActive Boolean! whether the store is active? createdAt DateTime! updatedAt DateTime! deletedAt DateTime merchant MerchantNode name String! Name of the store location String phoneNumber String! country String state String city String street String zipCode String taxRate Float shortDescription String longDescription String color String! deliveryCostPerMileCurrency StoreDeliveryCostPerMileCurrency deliveryCostPerMile String deliveryDistanceLimitMiles Float totalRating Float! storeType TypeNode disableOnlineOrders Boolean categories CategoryNodeConnection! logo String orderPreparationTimeHours Float merchants IUserNodeConnection! groups StoreGroupNodeConnection! pictures StorePictureNodeConnection! schedules StoreAvailabilityNodeConnection! customDates StoreCustomDateNodeConnection! products ProductNodeConnection! productsQuantities ProductQuantityNodeConnection! productsAvailabilities ProductAvailabilityNodeConnection! campaigns CampaignNodeConnection! offers OfferNodeConnection! loyaltyCards LoyaltyCardNodeConnection! visits VisitNodeConnection! floorPlans FloorPlanNodeConnection! sections SectionNodeConnection! orders OrderNodeConnection! pk Int address String pointsEarned Int reviews ReviewNodeConnection favorites FavoriteNodeConnection countryDisplay String isOpen Boolean deliveryCostPerMileAmount Float currentCustomDates StoreCustomDateNodeConnection Create a store Request Variables Response mutation ( $name : String ! $shortDescription : String $longDescription : String $location : String ! $phoneNumber : String ! $storeType : ID ! $categories : [ ID ]! $logo : Upload $pictures : [ StoreImageInput ]! $country : String $state : String $city : String $street : String $zipCode : String $taxRate : Float $orderPreparationTimeHours : Float $deliveryCostPerMile : Decimal $deliveryCostPerMileCurrency : String $deliveryDistanceLimitMiles : Float $schedules : [ StoreAvailabilityInput ]! $customDates : [ StoreCustomDateInput ] ){ createStore ( input: { name: $name shortDescription: $shortDescription longDescription: $longDescription location: $location phoneNumber: $phoneNumber storeType: $storeType categories: $categories logo: $logo pictures: $pictures country: $country state: $state city: $city zipCode: $zipCode street: $street taxRate: $taxRate orderPreparationTimeHours: $orderPreparationTimeHours deliveryCostPerMile: $deliveryCostPerMile deliveryCostPerMileCurrency: $deliveryCostPerMileCurrency deliveryDistanceLimitMiles: $deliveryDistanceLimitMiles schedules: $schedules customDates: $customDates } ) { success errors store { id } } } { \"name\" : \"Test store\" , \"shortDescription\" : \"\" , \"longDescription\" : \"\" , \"location\" : \"36.3633,6.6133\" , \"phoneNumber\" : \"+12125552368\" , \"storeType\" : 4 , \"categories\" : [ 2 ], \"logo\" : \"\" , \"pictures\" : [], \"taxRate\" : 0.5 , \"orderPreparationTimeHours\" : 0.5 , \"deliveryCostPerMile\" : \"1.00\" , \"deliveryDistanceLimitMiles\" : 2 , \"schedules\" : [ { \"day\" : 1 , \"startTime\" : \"7:00\" , \"endTime\" : \"12:00\" }, { \"day\" : 1 , \"startTime\" : \"12:00\" , \"endTime\" : \"20:00\" } ], \"customDates\" : [ { \"description\" : \"Easter Holiday\" , \"start\" : \"2022-04-17\" , \"end\" : \"2022-04-18\" } ] } { \"data\" : { \"createStore\" : { \"success\" : true , \"errors\" : null , \"store\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Update a store Request Variables Response mutation ( $id : ID ! $name : String $location : String $phoneNumber : String $country : String $state : String $city : String $street : String $zipCode : String $taxRate : Float $shortDescription : String $longDescription : String $storeType : ID $categories : [ ID ] $deliveryCostPerMile : Decimal $deliveryCostPerMileCurrency : String $deliveryDistanceLimitMiles : Float $disableOnlineOrders : Boolean $orderPreparationTimeHours : Float $pictures : [ StoreImageInput ] $schedules : [ StoreAvailabilityInput ] $customDates : [ StoreCustomDateInput ] $logo : Upload ){ updateStore ( input: { id: $id name: $name location: $location phoneNumber: $phoneNumber country: $country state: $state city: $city street: $street zipCode: $zipCode taxRate: $taxRate shortDescription: $shortDescription longDescription: $longDescription storeType: $storeType categories: $categories deliveryCostPerMile: $deliveryCostPerMile deliveryCostPerMileCurrency: $deliveryCostPerMileCurrency deliveryDistanceLimitMiles: $deliveryDistanceLimitMiles disableOnlineOrders: $disableOnlineOrders orderPreparationTimeHours: $orderPreparationTimeHours pictures: $pictures schedules: $schedules customDates: $customDates logo: $logo } ) { success errors store { id } } } { \"id\" : 131 , \"name\" : \"Edited store name\" } { \"data\" : { \"updateStore\" : { \"success\" : true , \"errors\" : null , \"store\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } } Delete a store Request Variables Response mutation ( $id : ID ! ){ deleteStore ( input: { id: $id } ) { success errors } } { \"id\" : 131 } { \"data\" : { \"deleteStore\" : { \"success\" : true , \"errors\" : null , } } } List stores query { stores { edges { node { pk id } } } } Get a single store query { store ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Stores"},{"location":"stores/#the-store-node","text":"Method Type Description id ID! Primary key extraInfo JSONString isActive Boolean! whether the store is active? createdAt DateTime! updatedAt DateTime! deletedAt DateTime merchant MerchantNode name String! Name of the store location String phoneNumber String! country String state String city String street String zipCode String taxRate Float shortDescription String longDescription String color String! deliveryCostPerMileCurrency StoreDeliveryCostPerMileCurrency deliveryCostPerMile String deliveryDistanceLimitMiles Float totalRating Float! storeType TypeNode disableOnlineOrders Boolean categories CategoryNodeConnection! logo String orderPreparationTimeHours Float merchants IUserNodeConnection! groups StoreGroupNodeConnection! pictures StorePictureNodeConnection! schedules StoreAvailabilityNodeConnection! customDates StoreCustomDateNodeConnection! products ProductNodeConnection! productsQuantities ProductQuantityNodeConnection! productsAvailabilities ProductAvailabilityNodeConnection! campaigns CampaignNodeConnection! offers OfferNodeConnection! loyaltyCards LoyaltyCardNodeConnection! visits VisitNodeConnection! floorPlans FloorPlanNodeConnection! sections SectionNodeConnection! orders OrderNodeConnection! pk Int address String pointsEarned Int reviews ReviewNodeConnection favorites FavoriteNodeConnection countryDisplay String isOpen Boolean deliveryCostPerMileAmount Float currentCustomDates StoreCustomDateNodeConnection","title":"The store node"},{"location":"stores/#create-a-store","text":"Request Variables Response mutation ( $name : String ! $shortDescription : String $longDescription : String $location : String ! $phoneNumber : String ! $storeType : ID ! $categories : [ ID ]! $logo : Upload $pictures : [ StoreImageInput ]! $country : String $state : String $city : String $street : String $zipCode : String $taxRate : Float $orderPreparationTimeHours : Float $deliveryCostPerMile : Decimal $deliveryCostPerMileCurrency : String $deliveryDistanceLimitMiles : Float $schedules : [ StoreAvailabilityInput ]! $customDates : [ StoreCustomDateInput ] ){ createStore ( input: { name: $name shortDescription: $shortDescription longDescription: $longDescription location: $location phoneNumber: $phoneNumber storeType: $storeType categories: $categories logo: $logo pictures: $pictures country: $country state: $state city: $city zipCode: $zipCode street: $street taxRate: $taxRate orderPreparationTimeHours: $orderPreparationTimeHours deliveryCostPerMile: $deliveryCostPerMile deliveryCostPerMileCurrency: $deliveryCostPerMileCurrency deliveryDistanceLimitMiles: $deliveryDistanceLimitMiles schedules: $schedules customDates: $customDates } ) { success errors store { id } } } { \"name\" : \"Test store\" , \"shortDescription\" : \"\" , \"longDescription\" : \"\" , \"location\" : \"36.3633,6.6133\" , \"phoneNumber\" : \"+12125552368\" , \"storeType\" : 4 , \"categories\" : [ 2 ], \"logo\" : \"\" , \"pictures\" : [], \"taxRate\" : 0.5 , \"orderPreparationTimeHours\" : 0.5 , \"deliveryCostPerMile\" : \"1.00\" , \"deliveryDistanceLimitMiles\" : 2 , \"schedules\" : [ { \"day\" : 1 , \"startTime\" : \"7:00\" , \"endTime\" : \"12:00\" }, { \"day\" : 1 , \"startTime\" : \"12:00\" , \"endTime\" : \"20:00\" } ], \"customDates\" : [ { \"description\" : \"Easter Holiday\" , \"start\" : \"2022-04-17\" , \"end\" : \"2022-04-18\" } ] } { \"data\" : { \"createStore\" : { \"success\" : true , \"errors\" : null , \"store\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Create a store"},{"location":"stores/#update-a-store","text":"Request Variables Response mutation ( $id : ID ! $name : String $location : String $phoneNumber : String $country : String $state : String $city : String $street : String $zipCode : String $taxRate : Float $shortDescription : String $longDescription : String $storeType : ID $categories : [ ID ] $deliveryCostPerMile : Decimal $deliveryCostPerMileCurrency : String $deliveryDistanceLimitMiles : Float $disableOnlineOrders : Boolean $orderPreparationTimeHours : Float $pictures : [ StoreImageInput ] $schedules : [ StoreAvailabilityInput ] $customDates : [ StoreCustomDateInput ] $logo : Upload ){ updateStore ( input: { id: $id name: $name location: $location phoneNumber: $phoneNumber country: $country state: $state city: $city street: $street zipCode: $zipCode taxRate: $taxRate shortDescription: $shortDescription longDescription: $longDescription storeType: $storeType categories: $categories deliveryCostPerMile: $deliveryCostPerMile deliveryCostPerMileCurrency: $deliveryCostPerMileCurrency deliveryDistanceLimitMiles: $deliveryDistanceLimitMiles disableOnlineOrders: $disableOnlineOrders orderPreparationTimeHours: $orderPreparationTimeHours pictures: $pictures schedules: $schedules customDates: $customDates logo: $logo } ) { success errors store { id } } } { \"id\" : 131 , \"name\" : \"Edited store name\" } { \"data\" : { \"updateStore\" : { \"success\" : true , \"errors\" : null , \"store\" : { \"id\" : \"U3RvcmVOb2RlOjEzMQ==\" } } } }","title":"Update a store"},{"location":"stores/#delete-a-store","text":"Request Variables Response mutation ( $id : ID ! ){ deleteStore ( input: { id: $id } ) { success errors } } { \"id\" : 131 } { \"data\" : { \"deleteStore\" : { \"success\" : true , \"errors\" : null , } } }","title":"Delete a store"},{"location":"stores/#list-stores","text":"query { stores { edges { node { pk id } } } }","title":"List stores"},{"location":"stores/#get-a-single-store","text":"query { store ( id: \"U3RvcmVOb2RlOjE5\" ){ pk id name } }","title":"Get a single store"},{"location":"workflows/","text":"One of the most important features on LoyaltyDish is the workflows system. A workflow is a sequence of automated actions, which can include email and SMS messages, that is triggered due to various reasons: When a customer performs an action like placing an order or redeeming an offer. When a customer is included in a segment, which is a dynamic grouping of profiles that meet certain criteria. When a a specific date-based profile property is set (customer birthday, offer start/end, etc\u2026). For example, a welcome series workflow is triggered when someone signs up to our platform. After triggering the flow, they can be sent a welcome email followed multiple pre-configured messages over time that introduces them to our brand. Workflows can include time delays between actions, decision making and multiple paths that split based on different criteria for further customization. We will then walk through setting your first workflow live by: Choosing a trigger for your flow and setting up the filters Adding steps to a flow Connecting steps in a flow Choosing a trigger for your flow and setting up the filters When selecting a trigger for your workflow, you have to choose one of three options outlined below: Metric , Segment , Date . You select the trigger type by dragging and dropping it in the workspace. Metric To change the event, click on the pen tool on the right, a list of available events will popup. Segment By clicking on Filters button, a segmentation editor will popup. Refer to Segmentation editor for a user guide. By clicking on Settings button, a settings for will pop up, it allows to schedule the task by choosing a specific date or a crontab expression. Date To filters on the targeted object, click the Filters button. in this example the targeted object is a loyalty that allows to redeem points to a specific product. Adding steps to a flow After you select a trigger and add any desired filters, you're ready to add additional components into your workflow. Flow components come in 3 types: Action: an action component performs a specific task such as sending out a message or assigning an offer. Flow action: can be used to branch your flow into multiple paths based on information related to the event that triggered the flow or add time delays between actions. Connecting steps in a flow In order to connect components, you should drag from the source\u2019s connection point and drop on the target.","title":"Workflows"},{"location":"workflows/#choosing-a-trigger-for-your-flow-and-setting-up-the-filters","text":"When selecting a trigger for your workflow, you have to choose one of three options outlined below: Metric , Segment , Date . You select the trigger type by dragging and dropping it in the workspace.","title":"Choosing a trigger for your flow and setting up the filters"},{"location":"workflows/#metric","text":"To change the event, click on the pen tool on the right, a list of available events will popup.","title":"Metric"},{"location":"workflows/#segment","text":"By clicking on Filters button, a segmentation editor will popup. Refer to Segmentation editor for a user guide. By clicking on Settings button, a settings for will pop up, it allows to schedule the task by choosing a specific date or a crontab expression.","title":"Segment"},{"location":"workflows/#date","text":"To filters on the targeted object, click the Filters button. in this example the targeted object is a loyalty that allows to redeem points to a specific product.","title":"Date"},{"location":"workflows/#adding-steps-to-a-flow","text":"After you select a trigger and add any desired filters, you're ready to add additional components into your workflow. Flow components come in 3 types: Action: an action component performs a specific task such as sending out a message or assigning an offer. Flow action: can be used to branch your flow into multiple paths based on information related to the event that triggered the flow or add time delays between actions.","title":"Adding steps to a flow"},{"location":"workflows/#connecting-steps-in-a-flow","text":"In order to connect components, you should drag from the source\u2019s connection point and drop on the target.","title":"Connecting steps in a flow"},{"location":"pos/checkout/","text":"LoyaltyDish supports 3 payment types: Credit card, PayPal and Cash. Checkout mutation mutation ( $id : ID ! $paymentType : String ! $cashReceived : Decimal $cashReceivedCurrency : String $change : Decimal $changeCurrency : String $consumerPaypalEmail : String $paymentGatewayParams : JSONString ){ checkoutOrder ( input: { id: $id paymentType: $paymentType cashReceived: $cashReceived cashReceivedCurrency: $cashReceivedCurrency change: $change changeCurrency: $changeCurrency consumerPaypalEmail: $consumerPaypalEmail paymentGatewayParams: $paymentGatewayParams } ) { errors success order { id } } } Credit card checkout paymentGatewayParams depends in the payment gateway you configured for your system Currently, there are 3 available payment gateways: Stripe, Square, Razorpay // Stripe params schema { \"payment_method_id\" : { \"type\" : \"string\" , }, } // Square params schema { \"source_id\" : { \"type\" : \"string\" , } } // Razorpay params schema { \"payment_id\" : { \"type\" : \"string\" , } } Request Variables Response mutation ( $id : ID ! $paymentType : String ! $paymentGatewayParams : JSONString ){ checkoutOrder ( input: { id: $id paymentType: $paymentType paymentGatewayParams: $paymentGatewayParams } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"CREDIT_CARD\" , \"paymentGatewayParams\" : \"{\\\"payment_method_id\\\": \\\"pm_1LUGLo2eZvKYlo2CO9peySAz\\\"\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } PayPal checkout Request Variables Response mutation ( $id : ID ! $paymentType : String ! $consumerPaypalEmail : String ){ checkoutOrder ( input: { id: $id paymentType: $paymentType consumerPaypalEmail: $consumerPaypalEmail } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"PAYPAL\" , \"consumerPaypalEmail\" : \"customer@gmail.com\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Cash checkout Request Variables Response mutation ( $id : ID ! $paymentType : String ! $cashReceived : Decimal $cashReceivedCurrency : String $change : Decimal $changeCurrency : String ){ checkoutOrder ( input: { id: $id paymentType: $paymentType cashReceived: $cashReceived cashReceivedCurrency: $cashReceivedCurrency change: $change changeCurrency: $changeCurrency } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"CASH\" , \"cashReceived\" : \"20.00\" , \"cashReceivedCurrency\" : \"USD\" , \"change\" : \"15.00\" , \"changeCurrency\" : \"USD\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Checkout"},{"location":"pos/checkout/#checkout-mutation","text":"mutation ( $id : ID ! $paymentType : String ! $cashReceived : Decimal $cashReceivedCurrency : String $change : Decimal $changeCurrency : String $consumerPaypalEmail : String $paymentGatewayParams : JSONString ){ checkoutOrder ( input: { id: $id paymentType: $paymentType cashReceived: $cashReceived cashReceivedCurrency: $cashReceivedCurrency change: $change changeCurrency: $changeCurrency consumerPaypalEmail: $consumerPaypalEmail paymentGatewayParams: $paymentGatewayParams } ) { errors success order { id } } }","title":"Checkout mutation"},{"location":"pos/checkout/#credit-card-checkout","text":"paymentGatewayParams depends in the payment gateway you configured for your system Currently, there are 3 available payment gateways: Stripe, Square, Razorpay // Stripe params schema { \"payment_method_id\" : { \"type\" : \"string\" , }, } // Square params schema { \"source_id\" : { \"type\" : \"string\" , } } // Razorpay params schema { \"payment_id\" : { \"type\" : \"string\" , } } Request Variables Response mutation ( $id : ID ! $paymentType : String ! $paymentGatewayParams : JSONString ){ checkoutOrder ( input: { id: $id paymentType: $paymentType paymentGatewayParams: $paymentGatewayParams } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"CREDIT_CARD\" , \"paymentGatewayParams\" : \"{\\\"payment_method_id\\\": \\\"pm_1LUGLo2eZvKYlo2CO9peySAz\\\"\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Credit card checkout"},{"location":"pos/checkout/#paypal-checkout","text":"Request Variables Response mutation ( $id : ID ! $paymentType : String ! $consumerPaypalEmail : String ){ checkoutOrder ( input: { id: $id paymentType: $paymentType consumerPaypalEmail: $consumerPaypalEmail } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"PAYPAL\" , \"consumerPaypalEmail\" : \"customer@gmail.com\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"PayPal checkout"},{"location":"pos/checkout/#cash-checkout","text":"Request Variables Response mutation ( $id : ID ! $paymentType : String ! $cashReceived : Decimal $cashReceivedCurrency : String $change : Decimal $changeCurrency : String ){ checkoutOrder ( input: { id: $id paymentType: $paymentType cashReceived: $cashReceived cashReceivedCurrency: $cashReceivedCurrency change: $change changeCurrency: $changeCurrency } ) { errors success order { id } } } { \"id\" : 15 , \"paymentType\" : \"CASH\" , \"cashReceived\" : \"20.00\" , \"cashReceivedCurrency\" : \"USD\" , \"change\" : \"15.00\" , \"changeCurrency\" : \"USD\" } { \"data\" : { \"checkoutOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Cash checkout"},{"location":"pos/discount/","text":"The discount node Method Type Description id ID! pk Int order OrderNode! pointsRedemption PointsRedemptionNode stampsRedemption StampsRedemptionNode offerRedemption RedemptionNode createdAt DateTime! updatedAt DateTime! Add discount to order Request Variables Response mutation ( $orderId : ID ! $redemptionCode : String ! ){ createOrderDiscount ( input: { orderId: $orderId redemptionCode: $redemptionCode } ) { errors success discount { id } } } { \"orderId\" : \"19220112164\" , \"redemptionCode\" : \"7782878702082007\" } { \"data\" : { \"createOrderDiscount\" : { \"success\" : true , \"errors\" : null , \"discount\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Remove discount from order Request Variables Response mutation ( $id : ID ! ){ deleteOrderDiscount ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deleteOrderDiscount\" : { \"success\" : true , \"errors\" : null } } }","title":"Discount"},{"location":"pos/discount/#the-discount-node","text":"Method Type Description id ID! pk Int order OrderNode! pointsRedemption PointsRedemptionNode stampsRedemption StampsRedemptionNode offerRedemption RedemptionNode createdAt DateTime! updatedAt DateTime!","title":"The discount node"},{"location":"pos/discount/#add-discount-to-order","text":"Request Variables Response mutation ( $orderId : ID ! $redemptionCode : String ! ){ createOrderDiscount ( input: { orderId: $orderId redemptionCode: $redemptionCode } ) { errors success discount { id } } } { \"orderId\" : \"19220112164\" , \"redemptionCode\" : \"7782878702082007\" } { \"data\" : { \"createOrderDiscount\" : { \"success\" : true , \"errors\" : null , \"discount\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Add discount to order"},{"location":"pos/discount/#remove-discount-from-order","text":"Request Variables Response mutation ( $id : ID ! ){ deleteOrderDiscount ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deleteOrderDiscount\" : { \"success\" : true , \"errors\" : null } } }","title":"Remove discount from order"},{"location":"pos/floor_plan/","text":"Sections The section node Method Type Description id ID! pk Int store StoreNode! name String! costCurrency SectionCostCurrency cost String productCategories ProductCategoryNodeConnection! tables TableNodeConnection! terminals TerminalNodeConnection! costAmount Float extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a section input TableInput { id: ID name: String ! maxSeatsNumber: Int ! costAmount: Decimal shape: String } Request Variables Response mutation ( $storeId : ID ! $name : String ! $costAmount : Decimal $productCategories : [ ID ] $tables : [ TableInput ] ){ createSection ( input: { storeId: $storeId name: $name costAmount: $costAmount productCategories: $productCategories tables: $tables } ) { errors success section { id } } } { \"storeID\" : 19 , \"name\" : \"Rooftop\" } { \"data\" : { \"createSection\" : { \"success\" : true , \"errors\" : null , \"section\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a section Request Variables Response mutation ( $id : ID ! $name : String $costAmount : Decimal $productCategories : [ ID ] $tables : [ TableInput ] ){ updateSection ( input: { id: $id name: $name costAmount: $costAmount productCategories: $productCategories tables: $tables } ) { errors success section { id } } } { \"id\" : 19 , \"name\" : \"Rooftop - edited\" } { \"data\" : { \"updateSection\" : { \"success\" : true , \"errors\" : null , \"section\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a section Request Variables Response mutation ( $id : ID ! ){ deleteSection ( input: { id: $id } ) { errors success } } { \"id\" : 19 } { \"data\" : { \"deleteSection\" : { \"success\" : true , \"errors\" : null } } } Tables The table node Method Type Description id ID! pk Int section SectionNode! name String! maxSeatsNumber Int! costCurrency TableCostCurrency cost String shape TableShape! floorPlans FloorPlanTableNodeConnection! orders OrderNodeConnection! reservations ReservationNodeConnection! costAmount Float extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a table Request Variables Response mutation ( $sectionId : ID ! $name : String ! $maxSeatsNumber : Int ! $costAmount : Decimal ){ createTable ( input: { sectionId: $sectionId name: $name maxSeatsNumber: $maxSeatsNumber costAmount: $costAmount } ) { errors success table { id } } } { \"sectionId\" : 19 , \"name\" : \"Balcony table 1\" } { \"data\" : { \"createTable\" : { \"success\" : true , \"errors\" : null , \"table\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a table Request Variables Response mutation ( $id : ID ! $name : String $maxSeatsNumber : Int $costAmount : Decimal ){ updateTable ( input: { id: $id name: $name maxSeatsNumber: $maxSeatsNumber costAmount: $costAmount } ) { errors success table { id } } } { \"id\" : 10 , \"name\" : \"Balcony table 2\" } { \"data\" : { \"updateTable\" : { \"success\" : true , \"errors\" : null , \"table\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a table Request Variables Response mutation ( $id : ID ! ){ updateTable ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteTable\" : { \"success\" : true , \"errors\" : null } } } The floor plan node Method Type Description id ID! pk Int store StoreNode! name String! tables FloorPlanTableNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a floor plan Request Variables Response mutation ( $storeId : ID ! $name : String ){ createFloorPlan ( input: { storeId: $storeId name: $name } ) { errors success floorPlan { id } } } { \"storeId\" : 19 , \"name\" : \"Floor plan 1\" } { \"data\" : { \"createFloorPlan\" : { \"success\" : true , \"errors\" : null , \"floorPlan\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a floor plan Request Variables Response mutation ( $id : ID ! $storeId : ID $name : String ){ updateFloorPlan ( input: { id: $id storeId: $storeId name: $name } ) { errors success floorPlan { id } } } { \"id\" : 22 , \"name\" : \"Floor plan 1 - edited\" } { \"data\" : { \"updateFloorPlan\" : { \"success\" : true , \"errors\" : null , \"floorPlan\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a floor plan Request Variables Response mutation ( $id : ID ! ){ deleteFloorPlan ( input: { id: $id } ) { errors success } } { \"id\" : 22 } { \"data\" : { \"deleteFloorPlan\" : { \"success\" : true , \"errors\" : null } } } Add table to floor plan Note that extraInfo input field should have the following data: { \"size\" : { \"h\" : 75 , \"w\" : 75 }, \"position\" : { \"x\" : 285 , \"y\" : 120 } } Request Variables Response mutation ( $floorPlanId : ID ! $tableId : ID ! $extraInfo : JSONString ){ createFloorPlanTable ( input: { floorPlanId: $floorPlanId tableId: $tableId extraInfo: $extraInfo } ) { errors success floorPlanTable { id } } } { \"floorPlanId\" : 22 , \"tableId\" : 10 , \"extraInfo\" : \"{...}\" } { \"data\" : { \"createFloorPlanTable\" : { \"success\" : true , \"errors\" : null , \"floorPlanTable\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update table on a floor plan Request Variables Response mutation ( $id : ID ! $extraInfo : JSONString ){ updateFloorPlanTable ( input: { id: $id extraInfo: $extraInfo } ) { errors success floorPlanTable { id } } } { \"id\" : 22 , \"extraInfo\" : \"{...}\" } { \"data\" : { \"updateFloorPlanTable\" : { \"success\" : true , \"errors\" : null , \"floorPlanTable\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Remove a table from a floor plan Request Variables Response mutation ( $id : ID ! ){ deleteFloorPlanTable ( input: { id: $id } ) { errors success } } { \"id\" : 22 } { \"data\" : { \"deleteFloorPlanTable\" : { \"success\" : true , \"errors\" : null } } }","title":"Floor plan"},{"location":"pos/floor_plan/#sections","text":"","title":"Sections"},{"location":"pos/floor_plan/#the-section-node","text":"Method Type Description id ID! pk Int store StoreNode! name String! costCurrency SectionCostCurrency cost String productCategories ProductCategoryNodeConnection! tables TableNodeConnection! terminals TerminalNodeConnection! costAmount Float extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The section node"},{"location":"pos/floor_plan/#create-a-section","text":"input TableInput { id: ID name: String ! maxSeatsNumber: Int ! costAmount: Decimal shape: String } Request Variables Response mutation ( $storeId : ID ! $name : String ! $costAmount : Decimal $productCategories : [ ID ] $tables : [ TableInput ] ){ createSection ( input: { storeId: $storeId name: $name costAmount: $costAmount productCategories: $productCategories tables: $tables } ) { errors success section { id } } } { \"storeID\" : 19 , \"name\" : \"Rooftop\" } { \"data\" : { \"createSection\" : { \"success\" : true , \"errors\" : null , \"section\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a section"},{"location":"pos/floor_plan/#update-a-section","text":"Request Variables Response mutation ( $id : ID ! $name : String $costAmount : Decimal $productCategories : [ ID ] $tables : [ TableInput ] ){ updateSection ( input: { id: $id name: $name costAmount: $costAmount productCategories: $productCategories tables: $tables } ) { errors success section { id } } } { \"id\" : 19 , \"name\" : \"Rooftop - edited\" } { \"data\" : { \"updateSection\" : { \"success\" : true , \"errors\" : null , \"section\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a section"},{"location":"pos/floor_plan/#delete-a-section","text":"Request Variables Response mutation ( $id : ID ! ){ deleteSection ( input: { id: $id } ) { errors success } } { \"id\" : 19 } { \"data\" : { \"deleteSection\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a section"},{"location":"pos/floor_plan/#tables","text":"","title":"Tables"},{"location":"pos/floor_plan/#the-table-node","text":"Method Type Description id ID! pk Int section SectionNode! name String! maxSeatsNumber Int! costCurrency TableCostCurrency cost String shape TableShape! floorPlans FloorPlanTableNodeConnection! orders OrderNodeConnection! reservations ReservationNodeConnection! costAmount Float extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The table node"},{"location":"pos/floor_plan/#create-a-table","text":"Request Variables Response mutation ( $sectionId : ID ! $name : String ! $maxSeatsNumber : Int ! $costAmount : Decimal ){ createTable ( input: { sectionId: $sectionId name: $name maxSeatsNumber: $maxSeatsNumber costAmount: $costAmount } ) { errors success table { id } } } { \"sectionId\" : 19 , \"name\" : \"Balcony table 1\" } { \"data\" : { \"createTable\" : { \"success\" : true , \"errors\" : null , \"table\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a table"},{"location":"pos/floor_plan/#update-a-table","text":"Request Variables Response mutation ( $id : ID ! $name : String $maxSeatsNumber : Int $costAmount : Decimal ){ updateTable ( input: { id: $id name: $name maxSeatsNumber: $maxSeatsNumber costAmount: $costAmount } ) { errors success table { id } } } { \"id\" : 10 , \"name\" : \"Balcony table 2\" } { \"data\" : { \"updateTable\" : { \"success\" : true , \"errors\" : null , \"table\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a table"},{"location":"pos/floor_plan/#delete-a-table","text":"Request Variables Response mutation ( $id : ID ! ){ updateTable ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteTable\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a table"},{"location":"pos/floor_plan/#the-floor-plan-node","text":"Method Type Description id ID! pk Int store StoreNode! name String! tables FloorPlanTableNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The floor plan node"},{"location":"pos/floor_plan/#create-a-floor-plan","text":"Request Variables Response mutation ( $storeId : ID ! $name : String ){ createFloorPlan ( input: { storeId: $storeId name: $name } ) { errors success floorPlan { id } } } { \"storeId\" : 19 , \"name\" : \"Floor plan 1\" } { \"data\" : { \"createFloorPlan\" : { \"success\" : true , \"errors\" : null , \"floorPlan\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a floor plan"},{"location":"pos/floor_plan/#update-a-floor-plan","text":"Request Variables Response mutation ( $id : ID ! $storeId : ID $name : String ){ updateFloorPlan ( input: { id: $id storeId: $storeId name: $name } ) { errors success floorPlan { id } } } { \"id\" : 22 , \"name\" : \"Floor plan 1 - edited\" } { \"data\" : { \"updateFloorPlan\" : { \"success\" : true , \"errors\" : null , \"floorPlan\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a floor plan"},{"location":"pos/floor_plan/#delete-a-floor-plan","text":"Request Variables Response mutation ( $id : ID ! ){ deleteFloorPlan ( input: { id: $id } ) { errors success } } { \"id\" : 22 } { \"data\" : { \"deleteFloorPlan\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a floor plan"},{"location":"pos/floor_plan/#add-table-to-floor-plan","text":"Note that extraInfo input field should have the following data: { \"size\" : { \"h\" : 75 , \"w\" : 75 }, \"position\" : { \"x\" : 285 , \"y\" : 120 } } Request Variables Response mutation ( $floorPlanId : ID ! $tableId : ID ! $extraInfo : JSONString ){ createFloorPlanTable ( input: { floorPlanId: $floorPlanId tableId: $tableId extraInfo: $extraInfo } ) { errors success floorPlanTable { id } } } { \"floorPlanId\" : 22 , \"tableId\" : 10 , \"extraInfo\" : \"{...}\" } { \"data\" : { \"createFloorPlanTable\" : { \"success\" : true , \"errors\" : null , \"floorPlanTable\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Add table to floor plan"},{"location":"pos/floor_plan/#update-table-on-a-floor-plan","text":"Request Variables Response mutation ( $id : ID ! $extraInfo : JSONString ){ updateFloorPlanTable ( input: { id: $id extraInfo: $extraInfo } ) { errors success floorPlanTable { id } } } { \"id\" : 22 , \"extraInfo\" : \"{...}\" } { \"data\" : { \"updateFloorPlanTable\" : { \"success\" : true , \"errors\" : null , \"floorPlanTable\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update table on a floor plan"},{"location":"pos/floor_plan/#remove-a-table-from-a-floor-plan","text":"Request Variables Response mutation ( $id : ID ! ){ deleteFloorPlanTable ( input: { id: $id } ) { errors success } } { \"id\" : 22 } { \"data\" : { \"deleteFloorPlanTable\" : { \"success\" : true , \"errors\" : null } } }","title":"Remove a table from a floor plan"},{"location":"pos/menu/","text":"The menu node Method Type Description id ID! pk Int merchant MerchantNode! name String! description String! startTime Time! endTime Time! productsCategories ProductCategoryNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime! Create a menu Request Variables Response mutation ( $name : String ! $description : String ! $startTime : Time ! $endTime : Time ! $extraInfo : JSONString ){ createMenu ( input: { name: $name description: $description startTime: $startTime endTime: $endTime extraInfo: $extraInfo } ) { errors success menu { id } } } { \"name\" : \"Breakfast\" , \"description\" : \"Menu description\" , \"startTime\" : \"07:00\" , \"endTime\" : \"12:00\" , \"extraInfo\" : \"{}\" } { \"data\" : { \"createMenu\" : { \"success\" : true , \"errors\" : null , \"menu\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } update a menu Request Variables Response mutation ( $id : ID $name : String $description : String $startTime : Time $endTime : Time $extraInfo : JSONString ){ updateMenu ( input: { id: $id name: $name description: $description startTime: $startTime endTime: $endTime extraInfo: $extraInfo } ) { errors success menu { id } } } { \"id\" : 10 , \"name\" : \"Breakfast - edited\" } { \"data\" : { \"updateMenu\" : { \"success\" : true , \"errors\" : null , \"menu\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a menu Request Variables Response mutation ( $id : ID ){ deleteMenu ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteMenu\" : { \"success\" : true , \"errors\" : null } } }","title":"Menu"},{"location":"pos/menu/#the-menu-node","text":"Method Type Description id ID! pk Int merchant MerchantNode! name String! description String! startTime Time! endTime Time! productsCategories ProductCategoryNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The menu node"},{"location":"pos/menu/#create-a-menu","text":"Request Variables Response mutation ( $name : String ! $description : String ! $startTime : Time ! $endTime : Time ! $extraInfo : JSONString ){ createMenu ( input: { name: $name description: $description startTime: $startTime endTime: $endTime extraInfo: $extraInfo } ) { errors success menu { id } } } { \"name\" : \"Breakfast\" , \"description\" : \"Menu description\" , \"startTime\" : \"07:00\" , \"endTime\" : \"12:00\" , \"extraInfo\" : \"{}\" } { \"data\" : { \"createMenu\" : { \"success\" : true , \"errors\" : null , \"menu\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a menu"},{"location":"pos/menu/#update-a-menu","text":"Request Variables Response mutation ( $id : ID $name : String $description : String $startTime : Time $endTime : Time $extraInfo : JSONString ){ updateMenu ( input: { id: $id name: $name description: $description startTime: $startTime endTime: $endTime extraInfo: $extraInfo } ) { errors success menu { id } } } { \"id\" : 10 , \"name\" : \"Breakfast - edited\" } { \"data\" : { \"updateMenu\" : { \"success\" : true , \"errors\" : null , \"menu\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"update a menu"},{"location":"pos/menu/#delete-a-menu","text":"Request Variables Response mutation ( $id : ID ){ deleteMenu ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteMenu\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a menu"},{"location":"pos/modifier/","text":"The modifier node Method Type Description id ID! pk Int merchant MerchntNode! name String! shortDescription String! description String! pictures ProductComponentPictureNodeConection! price String priceCurrency ProductComponentPriceCrrency! priceAmount Float outOfStock Boolean! order Int! groups ProductComponentsGroupNodeConection! orderItemsComponents OrderItemComponentNodeConection! extraInfo JSOString createdAt DateTime! updatedAt DateTime! Create a modifier Request Variables Response mutation ( $name : String ! $price : Decimal ! $priceCurrency : String $outOfStock : Boolean $shortDescription : String ! $description : String ! $order : Int ! $groups : [ ID ]! ){ createProductComponent ( input: { name: $name price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description order: $order groups: $groups } ) { errors success modifier { id } } } { \"name\" : \"Cheese\" , \"price\" : \"1.00\" , \"priceCurrency\" : \"USD\" , \"outOfStock\" : false , \"shortDescription\" : \"Cheese description\" , \"description\" : \"Cheese long description\" , \"order\" : 2 , \"picture\" : null , \"groups\" : [ 12 , 18 , 20 ] } { \"data\" : { \"createProductComponent\" : { \"success\" : true , \"errors\" : null , \"modifier\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a modifier Request Variables Response mutation ( $id : ID ! $name : String $price : Decimal $priceCurrency : String $outOfStock : Boolean $shortDescription : String $description : String $order : Int $groups : [ ID ] ){ updateProductComponent ( input: { id: $id name: $name price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description order: $order groups: $groups } ) { errors success modifier { id } } } { \"id\" : 100 , \"name\" : \"Cheese - edited\" , \"price\" : \"2.00\" , \"priceCurrency\" : \"USD\" } { \"data\" : { \"updateProductComponent\" : { \"success\" : true , \"errors\" : null , \"modifier\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a modifier Request Variables Response mutation ( $id : ID ! ){ deleteProductComponent ( input: { id: $id } ) { errors success modifier { id } } } { \"id\" : 100 } { \"data\" : { \"deleteProductComponent\" : { \"success\" : true , \"errors\" : null } } } Create a modifier picture Request Variables Response mutation ( $productComponentId : ID ! $picture : Upload ! $order : Int ! ){ createProductComponentPicture ( input: { productComponentId: $productComponentId picture: $picture order: $order } ) { errors success productComponentPicture { id } } } { \"productComponentId\" : 15 , \"picture\" : null , \"order\" : 3 } { \"data\" : { \"createProductComponentPicture\" : { \"success\" : true , \"errors\" : null , \"productComponentPicture\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a modifier picture Request Variables Response mutation ( $id : ID ! $picture : Upload $order : Int ){ updateProductComponentPicture ( input: { id: $id picture: $picture order: $order } ) { errors success productComponentPicture { id } } } { \"id\" : 15 , \"picture\" : null , \"order\" : 3 } { \"data\" : { \"updateProductComponentPicture\" : { \"success\" : true , \"errors\" : null , \"productComponentPicture\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a modifier picture Request Variables Response mutation ( $id : ID ! ){ deleteProductComponentPicture ( input: { id: $id } ) { errors success } } { \"id\" : 15 } { \"data\" : { \"deleteProductComponentPicture\" : { \"success\" : true , \"errors\" : null } } } the modifier group node Method Type Description id ID! extraInfo JSONString isActive Boolean! createdAt DateTime! updatedAt DateTime! deletedAt DateTime merchant MerchantNode! components ProductComponentNodeConnection! name String! description String! isRequired Boolean! maxNumOfComponents Int! minNumOfComponents Int! products ProductNodeConnection! pk Int modifiers ProductComponentNodeConnection Create a modifier group Request Variables Response mutation ( $name : String ! $description : String ! $isRequired : Boolean $maxNumOfComponents : Int ! $minNumOfComponents : Int ! $components : [ ID ] $products : [ ID ] $extraInfo : JSONString ){ createProductComponentsGroup ( input: { name: $name description: $description isRequired: $isRequired maxNumOfComponents: $maxNumOfComponents minNumOfComponents: $minNumOfComponents components: $components products: $products extraInfo: $extraInfo } ) { errors success modifiersGroup { id } } } { \"name\" : \"Toppings\" , \"description\" : \"Your toppings\" , \"isRequired\" : false , \"maxNumOfComponents\" : 10 , \"minNumOfComponents\" : 1 , \"components\" : [ 1 , 2 , 4 , 5 ], \"products\" : [ 100 , 45 , 48 ], \"extraInfo\" : \"{}\" } { \"data\" : { \"createProductComponentsGroup\" : { \"success\" : true , \"errors\" : null , \"productComponentsGroup\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a modifier group Request Variables Response mutation ( $id : ID ! $name : String $description : String $isRequired : Boolean $maxNumOfComponents : Int $minNumOfComponents : Int ){ updateProductComponentsGroup ( input: { id: $id name: $name description: $description isRequired: $isRequired maxNumOfComponents: $maxNumOfComponents minNumOfComponents: $minNumOfComponents } ) { errors success modifiersGroup { id } } } { \"id\" : 1 , \"name\" : \"Toppings - edited\" } { \"data\" : { \"updateProductComponentsGroup\" : { \"success\" : true , \"errors\" : null , \"productComponentsGroup\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a modifier group Request Variables Response mutation ( $id : ID ! ){ deleteProductComponentsGroup ( input: { id: $id } ) { errors success } } { \"id\" : 1 } { \"data\" : { \"deleteProductComponentsGroup\" : { \"success\" : true , \"errors\" : null } } }","title":"Modifier"},{"location":"pos/modifier/#the-modifier-node","text":"Method Type Description id ID! pk Int merchant MerchntNode! name String! shortDescription String! description String! pictures ProductComponentPictureNodeConection! price String priceCurrency ProductComponentPriceCrrency! priceAmount Float outOfStock Boolean! order Int! groups ProductComponentsGroupNodeConection! orderItemsComponents OrderItemComponentNodeConection! extraInfo JSOString createdAt DateTime! updatedAt DateTime!","title":"The modifier node"},{"location":"pos/modifier/#create-a-modifier","text":"Request Variables Response mutation ( $name : String ! $price : Decimal ! $priceCurrency : String $outOfStock : Boolean $shortDescription : String ! $description : String ! $order : Int ! $groups : [ ID ]! ){ createProductComponent ( input: { name: $name price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description order: $order groups: $groups } ) { errors success modifier { id } } } { \"name\" : \"Cheese\" , \"price\" : \"1.00\" , \"priceCurrency\" : \"USD\" , \"outOfStock\" : false , \"shortDescription\" : \"Cheese description\" , \"description\" : \"Cheese long description\" , \"order\" : 2 , \"picture\" : null , \"groups\" : [ 12 , 18 , 20 ] } { \"data\" : { \"createProductComponent\" : { \"success\" : true , \"errors\" : null , \"modifier\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a modifier"},{"location":"pos/modifier/#update-a-modifier","text":"Request Variables Response mutation ( $id : ID ! $name : String $price : Decimal $priceCurrency : String $outOfStock : Boolean $shortDescription : String $description : String $order : Int $groups : [ ID ] ){ updateProductComponent ( input: { id: $id name: $name price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description order: $order groups: $groups } ) { errors success modifier { id } } } { \"id\" : 100 , \"name\" : \"Cheese - edited\" , \"price\" : \"2.00\" , \"priceCurrency\" : \"USD\" } { \"data\" : { \"updateProductComponent\" : { \"success\" : true , \"errors\" : null , \"modifier\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a modifier"},{"location":"pos/modifier/#delete-a-modifier","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductComponent ( input: { id: $id } ) { errors success modifier { id } } } { \"id\" : 100 } { \"data\" : { \"deleteProductComponent\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a modifier"},{"location":"pos/modifier/#create-a-modifier-picture","text":"Request Variables Response mutation ( $productComponentId : ID ! $picture : Upload ! $order : Int ! ){ createProductComponentPicture ( input: { productComponentId: $productComponentId picture: $picture order: $order } ) { errors success productComponentPicture { id } } } { \"productComponentId\" : 15 , \"picture\" : null , \"order\" : 3 } { \"data\" : { \"createProductComponentPicture\" : { \"success\" : true , \"errors\" : null , \"productComponentPicture\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a modifier picture"},{"location":"pos/modifier/#update-a-modifier-picture","text":"Request Variables Response mutation ( $id : ID ! $picture : Upload $order : Int ){ updateProductComponentPicture ( input: { id: $id picture: $picture order: $order } ) { errors success productComponentPicture { id } } } { \"id\" : 15 , \"picture\" : null , \"order\" : 3 } { \"data\" : { \"updateProductComponentPicture\" : { \"success\" : true , \"errors\" : null , \"productComponentPicture\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a modifier picture"},{"location":"pos/modifier/#delete-a-modifier-picture","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductComponentPicture ( input: { id: $id } ) { errors success } } { \"id\" : 15 } { \"data\" : { \"deleteProductComponentPicture\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a modifier picture"},{"location":"pos/modifier/#the-modifier-group-node","text":"Method Type Description id ID! extraInfo JSONString isActive Boolean! createdAt DateTime! updatedAt DateTime! deletedAt DateTime merchant MerchantNode! components ProductComponentNodeConnection! name String! description String! isRequired Boolean! maxNumOfComponents Int! minNumOfComponents Int! products ProductNodeConnection! pk Int modifiers ProductComponentNodeConnection","title":"the modifier group node"},{"location":"pos/modifier/#create-a-modifier-group","text":"Request Variables Response mutation ( $name : String ! $description : String ! $isRequired : Boolean $maxNumOfComponents : Int ! $minNumOfComponents : Int ! $components : [ ID ] $products : [ ID ] $extraInfo : JSONString ){ createProductComponentsGroup ( input: { name: $name description: $description isRequired: $isRequired maxNumOfComponents: $maxNumOfComponents minNumOfComponents: $minNumOfComponents components: $components products: $products extraInfo: $extraInfo } ) { errors success modifiersGroup { id } } } { \"name\" : \"Toppings\" , \"description\" : \"Your toppings\" , \"isRequired\" : false , \"maxNumOfComponents\" : 10 , \"minNumOfComponents\" : 1 , \"components\" : [ 1 , 2 , 4 , 5 ], \"products\" : [ 100 , 45 , 48 ], \"extraInfo\" : \"{}\" } { \"data\" : { \"createProductComponentsGroup\" : { \"success\" : true , \"errors\" : null , \"productComponentsGroup\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a modifier group"},{"location":"pos/modifier/#update-a-modifier-group","text":"Request Variables Response mutation ( $id : ID ! $name : String $description : String $isRequired : Boolean $maxNumOfComponents : Int $minNumOfComponents : Int ){ updateProductComponentsGroup ( input: { id: $id name: $name description: $description isRequired: $isRequired maxNumOfComponents: $maxNumOfComponents minNumOfComponents: $minNumOfComponents } ) { errors success modifiersGroup { id } } } { \"id\" : 1 , \"name\" : \"Toppings - edited\" } { \"data\" : { \"updateProductComponentsGroup\" : { \"success\" : true , \"errors\" : null , \"productComponentsGroup\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a modifier group"},{"location":"pos/modifier/#delete-a-modifier-group","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductComponentsGroup ( input: { id: $id } ) { errors success } } { \"id\" : 1 } { \"data\" : { \"deleteProductComponentsGroup\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a modifier group"},{"location":"pos/order/","text":"The order node Method Type Description id ID! extraInfo JSONString isActive Boolean! deletedAt DateTime orderId String consumer ConsumerNode merchant MerchantNode waiter MerchantNode phoneNumber String store StoreNode orderType OrderTypeNode state OrderStateNode pickupDt DateTime paymentType OrderPaymentType! cashReceivedCurrency OrderCashReceivedCurrency cashReceived String changeCurrency OrderChangeCurrency change String numOfGuests Int taxCurrency OrderTaxCurrency! tax String isRawTotal Boolean! totalCurrency OrderTotalCurrency! total String completed Boolean! completedAt DateTime createdAt DateTime! updatedAt DateTime! table TableNode entitySource OrderEntitySource entitySourceId String items OrderItemNodeConnection! tips TipNodeConnection! delivery DeliveryNode discounts OrderDiscountNodeConnection! refund RefundNode reservation ReservationNode pk Int cashReceivedAmount Float changeAmount Float paymentTypeDisplay String List order types Request Response { orderTypes { edges { node { id pk name } } } } { \"data\" : { \"orderTypes\" : { \"edges\" : [ { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZTox\" , \"pk\" : 1 , \"name\" : \"In Store\" } }, { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZToy\" , \"pk\" : 2 , \"name\" : \"To Go\" } }, { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZToz\" , \"pk\" : 3 , \"name\" : \"Online\" } } ] } } } Create an order Request Variables Response mutation ( $storeId : ID ! $consumerId : ID $phoneNumber : String $numOfGuests : Int $orderTypeId : ID $waiterId : ID $pickupDt : DateTime $deliveryLocation : String $paymentType : String ){ createOrder ( input: { storeId: $storeId consumerId: $consumerId phoneNumber: $phoneNumber numOfGuests: $numOfGuests orderTypeId: $orderTypeId waiterId: $waiterId pickupDt: $pickupDt deliveryLocation: $deliveryLocation paymentType: $paymentType } ) { errors success order { id } } } { \"storeId\" : 14 , \"consumerId\" : 20 , \"orderTypeId\" : 2 , \"waiterId\" : 80 } { \"data\" : { \"createOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update an order Request Variables Response mutation ( $id : ID ! $phoneNumber : String $storeId : ID ! $orderTypeId : ID $paymentType : String $pickupDt : DateTime $deliveryLocation : String $waiterId : ID $consumerId : ID $tableId : ID $numOfGuests : Int ){ updateOrder ( input: { id: $id storeId: $storeId consumerId: $consumerId phoneNumber: $phoneNumber numOfGuests: $numOfGuests tableId: $tableId orderTypeId: $orderTypeId waiterId: $waiterId pickupDt: $pickupDt deliveryLocation: $deliveryLocation paymentType: $paymentType } ) { errors success order { id } } } { \"id\" : 25 , \"tableId\" : 10 } { \"data\" : { \"updateOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete an order Request Variables Response mutation ( $id : ID ! ){ updateOrder ( input: { id: $id } ) { errors success } } { \"id\" : 25 } { \"data\" : { \"deleteOrder\" : { \"success\" : true , \"errors\" : null } } }","title":"Order"},{"location":"pos/order/#the-order-node","text":"Method Type Description id ID! extraInfo JSONString isActive Boolean! deletedAt DateTime orderId String consumer ConsumerNode merchant MerchantNode waiter MerchantNode phoneNumber String store StoreNode orderType OrderTypeNode state OrderStateNode pickupDt DateTime paymentType OrderPaymentType! cashReceivedCurrency OrderCashReceivedCurrency cashReceived String changeCurrency OrderChangeCurrency change String numOfGuests Int taxCurrency OrderTaxCurrency! tax String isRawTotal Boolean! totalCurrency OrderTotalCurrency! total String completed Boolean! completedAt DateTime createdAt DateTime! updatedAt DateTime! table TableNode entitySource OrderEntitySource entitySourceId String items OrderItemNodeConnection! tips TipNodeConnection! delivery DeliveryNode discounts OrderDiscountNodeConnection! refund RefundNode reservation ReservationNode pk Int cashReceivedAmount Float changeAmount Float paymentTypeDisplay String","title":"The order node"},{"location":"pos/order/#list-order-types","text":"Request Response { orderTypes { edges { node { id pk name } } } } { \"data\" : { \"orderTypes\" : { \"edges\" : [ { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZTox\" , \"pk\" : 1 , \"name\" : \"In Store\" } }, { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZToy\" , \"pk\" : 2 , \"name\" : \"To Go\" } }, { \"node\" : { \"id\" : \"T3JkZXJUeXBlTm9kZToz\" , \"pk\" : 3 , \"name\" : \"Online\" } } ] } } }","title":"List order types"},{"location":"pos/order/#create-an-order","text":"Request Variables Response mutation ( $storeId : ID ! $consumerId : ID $phoneNumber : String $numOfGuests : Int $orderTypeId : ID $waiterId : ID $pickupDt : DateTime $deliveryLocation : String $paymentType : String ){ createOrder ( input: { storeId: $storeId consumerId: $consumerId phoneNumber: $phoneNumber numOfGuests: $numOfGuests orderTypeId: $orderTypeId waiterId: $waiterId pickupDt: $pickupDt deliveryLocation: $deliveryLocation paymentType: $paymentType } ) { errors success order { id } } } { \"storeId\" : 14 , \"consumerId\" : 20 , \"orderTypeId\" : 2 , \"waiterId\" : 80 } { \"data\" : { \"createOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create an order"},{"location":"pos/order/#update-an-order","text":"Request Variables Response mutation ( $id : ID ! $phoneNumber : String $storeId : ID ! $orderTypeId : ID $paymentType : String $pickupDt : DateTime $deliveryLocation : String $waiterId : ID $consumerId : ID $tableId : ID $numOfGuests : Int ){ updateOrder ( input: { id: $id storeId: $storeId consumerId: $consumerId phoneNumber: $phoneNumber numOfGuests: $numOfGuests tableId: $tableId orderTypeId: $orderTypeId waiterId: $waiterId pickupDt: $pickupDt deliveryLocation: $deliveryLocation paymentType: $paymentType } ) { errors success order { id } } } { \"id\" : 25 , \"tableId\" : 10 } { \"data\" : { \"updateOrder\" : { \"success\" : true , \"errors\" : null , \"order\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update an order"},{"location":"pos/order/#delete-an-order","text":"Request Variables Response mutation ( $id : ID ! ){ updateOrder ( input: { id: $id } ) { errors success } } { \"id\" : 25 } { \"data\" : { \"deleteOrder\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete an order"},{"location":"pos/order_item/","text":"The order item node Method Type Description id ID! pk Int order OrderNode! product ProductNode quantity Int! numOfDiscountedUnits Int! costCurrency OrderItemCostCurrency! cost String isRawCost Boolean! isCompleted Boolean! extraInfo JSONString createdAt DateTime! updatedAt DateTime! entitySource OrderItemEntitySource entitySourceId String components OrderItemComponentNodeConnection! refund RefundNode Create an order item Request Variables Response mutation ( $orderId : ID ! $productId : ID ! $quantity : Int $modifiers : [ OrderItemComponentInput ] $extraInfo : JSONString ){ createOrder ( input: { orderId: $orderId productId: $productId quantity: $quantity modifiers: $modifiers extraInfo: $extraInfo } ) { errors success orderItem { id } } } { \"orderId\" : \"19220112164\" , \"productId\" : 20 , \"quantity\" : 2 } { \"data\" : { \"createOrderItem\" : { \"success\" : true , \"errors\" : null , \"orderItem\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update an order item Request Variables Response mutation ( $id : ID ! $quantity : Int $isCompleted : Boolean ){ updateOrderItem ( input: { id: $id quantity: $quantity isCompleted: $isCompleted } ) { errors success orderItem { id } } } { \"id\" : 5 , \"isCompleted\" : true } { \"data\" : { \"updateOrderItem\" : { \"success\" : true , \"errors\" : null , \"orderItem\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete an order item Request Variables Response mutation ( $id : ID ! ){ deleteOrderItem ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deleteOrderItem\" : { \"success\" : true , \"errors\" : null } } }","title":"Order item"},{"location":"pos/order_item/#the-order-item-node","text":"Method Type Description id ID! pk Int order OrderNode! product ProductNode quantity Int! numOfDiscountedUnits Int! costCurrency OrderItemCostCurrency! cost String isRawCost Boolean! isCompleted Boolean! extraInfo JSONString createdAt DateTime! updatedAt DateTime! entitySource OrderItemEntitySource entitySourceId String components OrderItemComponentNodeConnection! refund RefundNode","title":"The order item node"},{"location":"pos/order_item/#create-an-order-item","text":"Request Variables Response mutation ( $orderId : ID ! $productId : ID ! $quantity : Int $modifiers : [ OrderItemComponentInput ] $extraInfo : JSONString ){ createOrder ( input: { orderId: $orderId productId: $productId quantity: $quantity modifiers: $modifiers extraInfo: $extraInfo } ) { errors success orderItem { id } } } { \"orderId\" : \"19220112164\" , \"productId\" : 20 , \"quantity\" : 2 } { \"data\" : { \"createOrderItem\" : { \"success\" : true , \"errors\" : null , \"orderItem\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create an order item"},{"location":"pos/order_item/#update-an-order-item","text":"Request Variables Response mutation ( $id : ID ! $quantity : Int $isCompleted : Boolean ){ updateOrderItem ( input: { id: $id quantity: $quantity isCompleted: $isCompleted } ) { errors success orderItem { id } } } { \"id\" : 5 , \"isCompleted\" : true } { \"data\" : { \"updateOrderItem\" : { \"success\" : true , \"errors\" : null , \"orderItem\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update an order item"},{"location":"pos/order_item/#delete-an-order-item","text":"Request Variables Response mutation ( $id : ID ! ){ deleteOrderItem ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deleteOrderItem\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete an order item"},{"location":"pos/printer/","text":"The printer node Method Type Description id ID! pk Int terminal TerminalNode! name String! connectionType PrinterConnectionType! ipAddress String macAddress String port Int! connectionTypeDisplay String extraInfo JSONString createdAt DateTime! updatedAt DateTime! Add a printer Request Variables Response mutation ( $terminalId : ID ! $name : String ! $connectionType : String ! # WIFI, BLUETOOTH $macAddress : String $ipAddress : String $port : Int ! ){ createPrinter ( input: { terminalId: $terminalId name: $name connectionType: $connectionType macAddress: $macAddress ipAddress: $ipAddress port: $port } ) { errors success printer { id } } } { \"terminalId\" : 10 , \"name\" : \"Printer #1\" , \"connectionType\" : \"WIFI\" , \"ipAddress\" : \"192.1.1.6\" , \"port\" : 9999 } { \"data\" : { \"createPrinter\" : { \"success\" : true , \"errors\" : null , \"printer\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a printer Request Variables Response mutation ( $id : ID ! $terminalId : ID $name : String $connectionType : String # WIFI, BLUETOOTH $macAddress : String $ipAddress : String $port : Int ){ updatePrinter ( input: { id: $id terminalId: $terminalId name: $name connectionType: $connectionType macAddress: $macAddress ipAddress: $ipAddress port: $port } ) { errors success printer { id } } } { \"id\" : 5 , \"name\" : \"Printer #1 - edited\" } { \"data\" : { \"updatePrinter\" : { \"success\" : true , \"errors\" : null , \"printer\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a printer Request Variables Response mutation ( $id : ID ! ){ deletePrinter ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deletePrinter\" : { \"success\" : true , \"errors\" : null } } }","title":"Printer"},{"location":"pos/printer/#the-printer-node","text":"Method Type Description id ID! pk Int terminal TerminalNode! name String! connectionType PrinterConnectionType! ipAddress String macAddress String port Int! connectionTypeDisplay String extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The printer node"},{"location":"pos/printer/#add-a-printer","text":"Request Variables Response mutation ( $terminalId : ID ! $name : String ! $connectionType : String ! # WIFI, BLUETOOTH $macAddress : String $ipAddress : String $port : Int ! ){ createPrinter ( input: { terminalId: $terminalId name: $name connectionType: $connectionType macAddress: $macAddress ipAddress: $ipAddress port: $port } ) { errors success printer { id } } } { \"terminalId\" : 10 , \"name\" : \"Printer #1\" , \"connectionType\" : \"WIFI\" , \"ipAddress\" : \"192.1.1.6\" , \"port\" : 9999 } { \"data\" : { \"createPrinter\" : { \"success\" : true , \"errors\" : null , \"printer\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Add a printer"},{"location":"pos/printer/#update-a-printer","text":"Request Variables Response mutation ( $id : ID ! $terminalId : ID $name : String $connectionType : String # WIFI, BLUETOOTH $macAddress : String $ipAddress : String $port : Int ){ updatePrinter ( input: { id: $id terminalId: $terminalId name: $name connectionType: $connectionType macAddress: $macAddress ipAddress: $ipAddress port: $port } ) { errors success printer { id } } } { \"id\" : 5 , \"name\" : \"Printer #1 - edited\" } { \"data\" : { \"updatePrinter\" : { \"success\" : true , \"errors\" : null , \"printer\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a printer"},{"location":"pos/printer/#delete-a-printer","text":"Request Variables Response mutation ( $id : ID ! ){ deletePrinter ( input: { id: $id } ) { errors success } } { \"id\" : 5 } { \"data\" : { \"deletePrinter\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a printer"},{"location":"pos/product/","text":"The product node Method Type Description id ID! pk Int name String! shortDescription String! description String! category ProductCategoryNode pictures ProductPictureNodeConnection! price String priceCurrency ProductPriceCurrency! priceAmount Float previousPrice Decimal previousPriceCurrency ProductPreviousPriceCurrency quantities ProductQuantityNodeConnection! availabilities ProductAvailabilityNodeConnection! outOfStock Boolean! stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! allStores StoreNodeConnection modifiersGroups ProductComponentsGroupNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime! List product categories { productCategories { edges { node { pk name } } } } Create a product Request Variables Response mutation ( $name : String ! $categoryId : ID ! $productComponentsGroups : [ ID ]! $price : Decimal ! $priceCurrency : String $outOfStock : Boolean $shortDescription : String ! $description : String ! $stores : [ ID ]! $storeGroups : [ ID ]! $pictures : [ ProductImageInput ] $extraInfo : JSONString ){ createProduct ( input: { name: $name categoryId: $categoryId productComponentsGroups: $productComponentsGroups price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description stores: $stores storeGroups: $storeGroups pictures: $pictures extraInfo: $extraInfo } ) { errors success product { id } } } { \"name\" : \"Pizza\" , \"categoryId\" : 56 , \"productComponentsGroups\" : [ 5 , 9 , 8 , 6 ], \"price\" : \"2.00\" , \"priceCurrency\" : \"USD\" , \"outOfStock\" : false , \"shortDescription\" : \"Pizza short description\" , \"description\" : \"Pizza long description\" , \"stores\" : [ 1 , 2 , 3 ], \"storeGroups\" : [ 5 , 8 , 7 ] } { \"data\" : { \"createProduct\" : { \"success\" : true , \"errors\" : null , \"product\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a product Request Variables Response mutation ( $id : ID ! $name : String $categoryId : ID $productComponentsGroups : [ ID ] $price : Decimal $priceCurrency : String $outOfStock : Boolean $shortDescription : String $description : String $stores : [ ID ] $storeGroups : [ ID ] $extraInfo : JSONString ){ createProduct ( input: { id: $id name: $name categoryId: $categoryId productComponentsGroups: $productComponentsGroups price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description stores: $stores storeGroups: $storeGroups extraInfo: $extraInfo } ) { errors success product { id } } } { \"id\" : 90 , \"name\" : \"Pizza - edited\" } { \"data\" : { \"updateProduct\" : { \"success\" : true , \"errors\" : null , \"product\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a product Request Variables Response mutation ( $id : ID ! ){ deleteProduct ( input: { id: $id } ) { errors success } } { \"id\" : 90 } { \"data\" : { \"deleteProduct\" : { \"success\" : true , \"errors\" : null } } } Add product picture Request Variables Response mutation ( $productId : ID ! $picture : Upload ! $order : Int ! ){ createProductPicture ( input: { productId: $productId picture: $picture order: $order } ) { errors success } } { \"productId\" : 18 , \"picture\" : null , \"order\" : 1 } { \"data\" : { \"createProductPicture\" : { \"success\" : true , \"errors\" : null } } } Update product picture Request Variables Response mutation ( $id : ID ! $picture : Upload $order : Int ){ updateProductPicture ( input: { id: $id picture: $picture order: $order } ) { errors success } } { \"id\" : 18 , \"picture\" : null , \"order\" : 2 } { \"data\" : { \"updateProductPicture\" : { \"success\" : true , \"errors\" : null } } } Delete product picture Request Variables Response mutation ( $id : ID ! ){ deleteProductPicture ( input: { id: $id } ) { errors success } } { \"id\" : 18 } { \"data\" : { \"deleteProductPicture\" : { \"success\" : true , \"errors\" : null } } } Add product quantity Request Variables Response mutation ( $productId : ID ! $storeId : ID ! $order : Int ! ){ createProductQuantity ( input: { productId: $productId storeId: $storeId quantity: $quantity } ) { errors success } } { \"productId\" : 18 , \"storeId\" : 22 , \"quantity\" : 100 } { \"data\" : { \"createProductQuantity\" : { \"success\" : true , \"errors\" : null } } } Update product quantity Request Variables Response mutation ( $id : ID ! $productId : ID $storeId : ID $order : Int ){ updateProductQuantity ( input: { id: $id productId: $productId storeId: $storeId quantity: $quantity } ) { errors success } } { \"id\" : 2 , \"productId\" : 18 , \"storeId\" : 22 , \"quantity\" : 100 } { \"data\" : { \"updateProductQuantity\" : { \"success\" : true , \"errors\" : null } } } Delete product quantity Request Variables Response mutation ( $id : ID ! ){ deleteProductQuantity ( input: { id: $id } ) { errors success } } { \"id\" : 2 } { \"data\" : { \"deleteProductQuantity\" : { \"success\" : true , \"errors\" : null } } } Add product availability Request Variables Response mutation ( $productId : ID ! $storeId : ID ! $startTime : Time ! $endTime : Time ! ){ createProductAvailability ( input: { productId: $productId storeId: $storeId startTime: $startTime endTime: $endTime } ) { errors success } } { \"productId\" : 18 , \"storeId\" : 22 , \"startTime\" : \"10:00\" , \"endTime\" : \"13:00\" } { \"data\" : { \"createProductAvailability\" : { \"success\" : true , \"errors\" : null } } } Update product availability Request Variables Response mutation ( $id : ID ! $storeId : ID $startTime : Time $endTime : Time ){ updateProductAvailability ( input: { id: $id storeId: $storeId startTime: $startTime endTime: $endTime } ) { errors success } } { \"id\" : 18 , \"storeId\" : 22 , \"startTime\" : \"10:00\" , \"endTime\" : \"13:00\" } { \"data\" : { \"updateProductAvailability\" : { \"success\" : true , \"errors\" : null } } } Delete product availability Request Variables Response mutation ( $id : ID ! ){ deleteProductAvailability ( input: { id: $id } ) { errors success } } { \"id\" : 18 } { \"data\" : { \"deleteProductAvailability\" : { \"success\" : true , \"errors\" : null } } }","title":"Product"},{"location":"pos/product/#the-product-node","text":"Method Type Description id ID! pk Int name String! shortDescription String! description String! category ProductCategoryNode pictures ProductPictureNodeConnection! price String priceCurrency ProductPriceCurrency! priceAmount Float previousPrice Decimal previousPriceCurrency ProductPreviousPriceCurrency quantities ProductQuantityNodeConnection! availabilities ProductAvailabilityNodeConnection! outOfStock Boolean! stores StoreNodeConnection! storeGroups StoreGroupNodeConnection! allStores StoreNodeConnection modifiersGroups ProductComponentsGroupNodeConnection extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The product node"},{"location":"pos/product/#list-product-categories","text":"{ productCategories { edges { node { pk name } } } }","title":"List product categories"},{"location":"pos/product/#create-a-product","text":"Request Variables Response mutation ( $name : String ! $categoryId : ID ! $productComponentsGroups : [ ID ]! $price : Decimal ! $priceCurrency : String $outOfStock : Boolean $shortDescription : String ! $description : String ! $stores : [ ID ]! $storeGroups : [ ID ]! $pictures : [ ProductImageInput ] $extraInfo : JSONString ){ createProduct ( input: { name: $name categoryId: $categoryId productComponentsGroups: $productComponentsGroups price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description stores: $stores storeGroups: $storeGroups pictures: $pictures extraInfo: $extraInfo } ) { errors success product { id } } } { \"name\" : \"Pizza\" , \"categoryId\" : 56 , \"productComponentsGroups\" : [ 5 , 9 , 8 , 6 ], \"price\" : \"2.00\" , \"priceCurrency\" : \"USD\" , \"outOfStock\" : false , \"shortDescription\" : \"Pizza short description\" , \"description\" : \"Pizza long description\" , \"stores\" : [ 1 , 2 , 3 ], \"storeGroups\" : [ 5 , 8 , 7 ] } { \"data\" : { \"createProduct\" : { \"success\" : true , \"errors\" : null , \"product\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a product"},{"location":"pos/product/#update-a-product","text":"Request Variables Response mutation ( $id : ID ! $name : String $categoryId : ID $productComponentsGroups : [ ID ] $price : Decimal $priceCurrency : String $outOfStock : Boolean $shortDescription : String $description : String $stores : [ ID ] $storeGroups : [ ID ] $extraInfo : JSONString ){ createProduct ( input: { id: $id name: $name categoryId: $categoryId productComponentsGroups: $productComponentsGroups price: $price priceCurrency: $priceCurrency outOfStock: $outOfStock shortDescription: $shortDescription description: $description stores: $stores storeGroups: $storeGroups extraInfo: $extraInfo } ) { errors success product { id } } } { \"id\" : 90 , \"name\" : \"Pizza - edited\" } { \"data\" : { \"updateProduct\" : { \"success\" : true , \"errors\" : null , \"product\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a product"},{"location":"pos/product/#delete-a-product","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProduct ( input: { id: $id } ) { errors success } } { \"id\" : 90 } { \"data\" : { \"deleteProduct\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a product"},{"location":"pos/product/#add-product-picture","text":"Request Variables Response mutation ( $productId : ID ! $picture : Upload ! $order : Int ! ){ createProductPicture ( input: { productId: $productId picture: $picture order: $order } ) { errors success } } { \"productId\" : 18 , \"picture\" : null , \"order\" : 1 } { \"data\" : { \"createProductPicture\" : { \"success\" : true , \"errors\" : null } } }","title":"Add product picture"},{"location":"pos/product/#update-product-picture","text":"Request Variables Response mutation ( $id : ID ! $picture : Upload $order : Int ){ updateProductPicture ( input: { id: $id picture: $picture order: $order } ) { errors success } } { \"id\" : 18 , \"picture\" : null , \"order\" : 2 } { \"data\" : { \"updateProductPicture\" : { \"success\" : true , \"errors\" : null } } }","title":"Update product picture"},{"location":"pos/product/#delete-product-picture","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductPicture ( input: { id: $id } ) { errors success } } { \"id\" : 18 } { \"data\" : { \"deleteProductPicture\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete product picture"},{"location":"pos/product/#add-product-quantity","text":"Request Variables Response mutation ( $productId : ID ! $storeId : ID ! $order : Int ! ){ createProductQuantity ( input: { productId: $productId storeId: $storeId quantity: $quantity } ) { errors success } } { \"productId\" : 18 , \"storeId\" : 22 , \"quantity\" : 100 } { \"data\" : { \"createProductQuantity\" : { \"success\" : true , \"errors\" : null } } }","title":"Add product quantity"},{"location":"pos/product/#update-product-quantity","text":"Request Variables Response mutation ( $id : ID ! $productId : ID $storeId : ID $order : Int ){ updateProductQuantity ( input: { id: $id productId: $productId storeId: $storeId quantity: $quantity } ) { errors success } } { \"id\" : 2 , \"productId\" : 18 , \"storeId\" : 22 , \"quantity\" : 100 } { \"data\" : { \"updateProductQuantity\" : { \"success\" : true , \"errors\" : null } } }","title":"Update product quantity"},{"location":"pos/product/#delete-product-quantity","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductQuantity ( input: { id: $id } ) { errors success } } { \"id\" : 2 } { \"data\" : { \"deleteProductQuantity\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete product quantity"},{"location":"pos/product/#add-product-availability","text":"Request Variables Response mutation ( $productId : ID ! $storeId : ID ! $startTime : Time ! $endTime : Time ! ){ createProductAvailability ( input: { productId: $productId storeId: $storeId startTime: $startTime endTime: $endTime } ) { errors success } } { \"productId\" : 18 , \"storeId\" : 22 , \"startTime\" : \"10:00\" , \"endTime\" : \"13:00\" } { \"data\" : { \"createProductAvailability\" : { \"success\" : true , \"errors\" : null } } }","title":"Add product availability"},{"location":"pos/product/#update-product-availability","text":"Request Variables Response mutation ( $id : ID ! $storeId : ID $startTime : Time $endTime : Time ){ updateProductAvailability ( input: { id: $id storeId: $storeId startTime: $startTime endTime: $endTime } ) { errors success } } { \"id\" : 18 , \"storeId\" : 22 , \"startTime\" : \"10:00\" , \"endTime\" : \"13:00\" } { \"data\" : { \"updateProductAvailability\" : { \"success\" : true , \"errors\" : null } } }","title":"Update product availability"},{"location":"pos/product/#delete-product-availability","text":"Request Variables Response mutation ( $id : ID ! ){ deleteProductAvailability ( input: { id: $id } ) { errors success } } { \"id\" : 18 } { \"data\" : { \"deleteProductAvailability\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete product availability"},{"location":"pos/refund/","text":"The refund node Method Type Description id ID! order OrderNode orderItem OrderItemNode isCash Boolean reason String! createdAt DateTime! pk Int Refund order Request Variables Response mutation ( $orderId : ID ! $amount : Decimal $amountCurrency : String $reason : String ){ createOrderRefund ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency reason: $reason } ) { errors success refund { id } } } { \"orderId\" : \"19220112164\" , \"reason\" : \"Reason for refund\" } { \"data\" : { \"createOrderRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Partial refund Request Variables Response mutation ( $orderId : ID ! $amount : Decimal $amountCurrency : String $reason : String ){ createOrderRefund ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency reason: $reason } ) { errors success refund { id } } } { \"orderId\" : \"19220112164\" , \"amount\" : \"10.00\" , \"amountCurrency\" : \"USD\" , \"reason\" : \"Reason for refund\" } { \"data\" : { \"createOrderRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Refund order items Request Variables Response mutation ( $orderItems : [ OrderItemRefundInput ]! ){ createOrderItemsRefund ( input: { orderItems: $orderItems } ) { errors success refunds { id } } } { \"orderItems\" : [ { \"orderItemId\" : 45 , \"reason\" : \"some reason\" }, { \"orderItemId\" : 46 } ] } { \"data\" : { \"createOrderItemsRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : [ { \"id\" : \"U3RvcmVOb2RlOjE5\" }, { \"id\" : \"U8YfghVOb2HkOjB9\" } ] } } } Cash refund Setting isCash to true will make all the previously mentioned scenarios to cash refunds. Request Variables Response mutation ( $orderItems : [ OrderItemRefundInput ]! $isCash : Boolean ){ createOrderItemsRefund ( input: { orderItems: $orderItems isCash: $isCash } ) { errors success refunds { id } } } { \"orderItems\" : [ { \"orderItemId\" : 45 , \"reason\" : \"some reason\" }, { \"orderItemId\" : 46 } ], \"isCash\" : true } { \"data\" : { \"createOrderItemsRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : [ { \"id\" : \"U3RvcmVOb2RlOjE5\" }, { \"id\" : \"U8YfghVOb2HkOjB9\" } ] } } }","title":"Refund"},{"location":"pos/refund/#the-refund-node","text":"Method Type Description id ID! order OrderNode orderItem OrderItemNode isCash Boolean reason String! createdAt DateTime! pk Int","title":"The refund node"},{"location":"pos/refund/#refund-order","text":"Request Variables Response mutation ( $orderId : ID ! $amount : Decimal $amountCurrency : String $reason : String ){ createOrderRefund ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency reason: $reason } ) { errors success refund { id } } } { \"orderId\" : \"19220112164\" , \"reason\" : \"Reason for refund\" } { \"data\" : { \"createOrderRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Refund order"},{"location":"pos/refund/#partial-refund","text":"Request Variables Response mutation ( $orderId : ID ! $amount : Decimal $amountCurrency : String $reason : String ){ createOrderRefund ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency reason: $reason } ) { errors success refund { id } } } { \"orderId\" : \"19220112164\" , \"amount\" : \"10.00\" , \"amountCurrency\" : \"USD\" , \"reason\" : \"Reason for refund\" } { \"data\" : { \"createOrderRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Partial refund"},{"location":"pos/refund/#refund-order-items","text":"Request Variables Response mutation ( $orderItems : [ OrderItemRefundInput ]! ){ createOrderItemsRefund ( input: { orderItems: $orderItems } ) { errors success refunds { id } } } { \"orderItems\" : [ { \"orderItemId\" : 45 , \"reason\" : \"some reason\" }, { \"orderItemId\" : 46 } ] } { \"data\" : { \"createOrderItemsRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : [ { \"id\" : \"U3RvcmVOb2RlOjE5\" }, { \"id\" : \"U8YfghVOb2HkOjB9\" } ] } } }","title":"Refund order items"},{"location":"pos/refund/#cash-refund","text":"Setting isCash to true will make all the previously mentioned scenarios to cash refunds. Request Variables Response mutation ( $orderItems : [ OrderItemRefundInput ]! $isCash : Boolean ){ createOrderItemsRefund ( input: { orderItems: $orderItems isCash: $isCash } ) { errors success refunds { id } } } { \"orderItems\" : [ { \"orderItemId\" : 45 , \"reason\" : \"some reason\" }, { \"orderItemId\" : 46 } ], \"isCash\" : true } { \"data\" : { \"createOrderItemsRefund\" : { \"success\" : true , \"errors\" : null , \"refund\" : [ { \"id\" : \"U3RvcmVOb2RlOjE5\" }, { \"id\" : \"U8YfghVOb2HkOjB9\" } ] } } }","title":"Cash refund"},{"location":"pos/terminal/","text":"The terminal node Method Type Description id ID! pk Int section SectionNode! name String! key String! printers PrinterNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime! Add a terminal Request Variables Response mutation ( $sectionId : ID ! $name : String ! ){ createTerminal ( input: { sectionId: $sectionId name: $name } ) { errors success terminal { id } } } { \"sectionId\" : 1 , \"productId\" : \"Terminal 01\" } { \"data\" : { \"createTerminal\" : { \"success\" : true , \"errors\" : null , \"terminal\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Sign in to a terminal Request Variables Response mutation ( $key : String ! ){ terminalSignIn ( input: { key: $key } ) { errors success } } { \"key\" : \"67MU4G93RRYH\" } { \"data\" : { \"terminalSignIn\" : { \"success\" : true , \"errors\" : null } } } Update a terminal Request Variables Response mutation ( $id : ID ! $sectionId : ID $name : String ){ updateTerminal ( input: { id: $id sectionId: $sectionId name: $name } ) { errors success terminal { id } } } { \"id\" : 1 , \"productId\" : \"Terminal 01 - edited\" } { \"data\" : { \"updateTerminal\" : { \"success\" : true , \"errors\" : null , \"terminal\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a terminal Request Variables Response mutation ( $id : ID ! ){ deleteTerminal ( input: { id: $id } ) { errors success } } { \"id\" : 1 } { \"data\" : { \"deleteTerminal\" : { \"success\" : true , \"errors\" : null } } }","title":"Terminal"},{"location":"pos/terminal/#the-terminal-node","text":"Method Type Description id ID! pk Int section SectionNode! name String! key String! printers PrinterNodeConnection! extraInfo JSONString createdAt DateTime! updatedAt DateTime!","title":"The terminal node"},{"location":"pos/terminal/#add-a-terminal","text":"Request Variables Response mutation ( $sectionId : ID ! $name : String ! ){ createTerminal ( input: { sectionId: $sectionId name: $name } ) { errors success terminal { id } } } { \"sectionId\" : 1 , \"productId\" : \"Terminal 01\" } { \"data\" : { \"createTerminal\" : { \"success\" : true , \"errors\" : null , \"terminal\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Add a terminal"},{"location":"pos/terminal/#sign-in-to-a-terminal","text":"Request Variables Response mutation ( $key : String ! ){ terminalSignIn ( input: { key: $key } ) { errors success } } { \"key\" : \"67MU4G93RRYH\" } { \"data\" : { \"terminalSignIn\" : { \"success\" : true , \"errors\" : null } } }","title":"Sign in to a terminal"},{"location":"pos/terminal/#update-a-terminal","text":"Request Variables Response mutation ( $id : ID ! $sectionId : ID $name : String ){ updateTerminal ( input: { id: $id sectionId: $sectionId name: $name } ) { errors success terminal { id } } } { \"id\" : 1 , \"productId\" : \"Terminal 01 - edited\" } { \"data\" : { \"updateTerminal\" : { \"success\" : true , \"errors\" : null , \"terminal\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a terminal"},{"location":"pos/terminal/#delete-a-terminal","text":"Request Variables Response mutation ( $id : ID ! ){ deleteTerminal ( input: { id: $id } ) { errors success } } { \"id\" : 1 } { \"data\" : { \"deleteTerminal\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a terminal"},{"location":"pos/tip/","text":"Create a tip Request Variables Response mutation ( $orderId : ID ! $amount : Decimal ! $amountCurrency : String ){ createTip ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency } ) { errors success tip { id } } } { \"orderId\" : \"19220112164\" , \"amount\" : \"5.00\" } { \"data\" : { \"createTip\" : { \"success\" : true , \"errors\" : null , \"tip\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Update a tip Request Variables Response mutation ( $id : ID ! $amount : Decimal $amountCurrency : String ){ updateTip ( input: { id: $id amount: $amount amountCurrency: $amountCurrency } ) { errors success tip { id } } } { \"id\" : 10 , \"amount\" : \"6.00\" } { \"data\" : { \"updateTip\" : { \"success\" : true , \"errors\" : null , \"tip\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } } Delete a tip Request Variables Response mutation ( $id : ID ! ){ deleteTip ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteTip\" : { \"success\" : true , \"errors\" : null } } }","title":"Tip"},{"location":"pos/tip/#create-a-tip","text":"Request Variables Response mutation ( $orderId : ID ! $amount : Decimal ! $amountCurrency : String ){ createTip ( input: { orderId: $orderId amount: $amount amountCurrency: $amountCurrency } ) { errors success tip { id } } } { \"orderId\" : \"19220112164\" , \"amount\" : \"5.00\" } { \"data\" : { \"createTip\" : { \"success\" : true , \"errors\" : null , \"tip\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Create a tip"},{"location":"pos/tip/#update-a-tip","text":"Request Variables Response mutation ( $id : ID ! $amount : Decimal $amountCurrency : String ){ updateTip ( input: { id: $id amount: $amount amountCurrency: $amountCurrency } ) { errors success tip { id } } } { \"id\" : 10 , \"amount\" : \"6.00\" } { \"data\" : { \"updateTip\" : { \"success\" : true , \"errors\" : null , \"tip\" : { \"id\" : \"U3RvcmVOb2RlOjE5\" } } } }","title":"Update a tip"},{"location":"pos/tip/#delete-a-tip","text":"Request Variables Response mutation ( $id : ID ! ){ deleteTip ( input: { id: $id } ) { errors success } } { \"id\" : 10 } { \"data\" : { \"deleteTip\" : { \"success\" : true , \"errors\" : null } } }","title":"Delete a tip"}]}